{"version":3,"sources":["views/pages/authentication/Login.js","utility/Url.js","utility/axiosHooks.js","@core/components/input-password-toggle/index.js"],"names":["ToastContent","name","role","className","size","color","icon","Login","props","useSkin","skin","ability","useContext","AbilityContext","dispatch","useDispatch","history","useHistory","useState","email","setEmail","password","setPassword","useForm","register","errors","handleSubmit","illustration","source","require","default","onSubmit","a","isObjEmpty","request","method","data","fetcher","LOGIN_URL","res","admin","token","id","_id","username","roleName","action","subject","accessToken","refreshToken","handleLogin","update","push","getHomeRouteForLoggedInUser","toast","success","fullName","transition","Slide","hideProgressBar","autoClose","console","log","to","onClick","e","preventDefault","src","Logo","alt","lg","sm","md","tag","for","autoFocus","type","value","placeholder","onChange","target","classnames","innerRef","required","validate","label","Ripple","block","REFRESH_TOKEN","GET_ALL_DATA_USER","GET_USER_BYID","GET_CATEGORY","GET_CATEGORY_BYID","GET_PRODUCT","GET_PRODUCT_BYID","GET_CHARGE","GET_CHARGE_BYID","GET_PROMO","GET_PROMO_BYID","GET_VOUCHER","GET_VOUCHER_BYID","axios","defaults","baseURL","headers","common","axiosApiInstance","create","getToken","localStorage","getItem","url","config","header","interceptors","use","Authorization","response","InputPasswordToggle","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","addonType","renderIcon","defaultProps"],"mappings":"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","file":"static/js/165.1fdb730c.chunk.js","sourcesContent":["import { useState, useContext, Fragment } from 'react'\nimport { LOGIN_URL } from '@src/utility/Url'\nimport { fetcher } from '@src/utility/axiosHooks'\nimport classnames from 'classnames'\nimport Avatar from '@components/avatar'\nimport { useSkin } from '@hooks/useSkin'\nimport { useDispatch } from 'react-redux'\nimport { useForm } from 'react-hook-form'\nimport { toast, Slide } from 'react-toastify'\nimport { handleLogin } from '@store/actions/auth'\nimport { AbilityContext } from '@src/utility/context/Can'\nimport { Link, useHistory } from 'react-router-dom'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\nimport Logo from '@src/assets/images/logo/logo.svg'\nimport { Coffee } from 'react-feather'\nimport {\n  Alert,\n  Row,\n  Col,\n  CardTitle,\n  CardText,\n  Form,\n  Input,\n  FormGroup,\n  Label,\n  CustomInput,\n  Button,\n  UncontrolledTooltip\n} from 'reactstrap'\n\nimport '@styles/base/pages/page-auth.scss'\n\nconst ToastContent = ({ name, role }) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\n        <h6 className='toast-title font-weight-bold'>Selamat Datang, {name}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span>Anda berhasil login sebagai {role}. Sekarang anda bisa mulai bekerja. Enjoy!</span>\n    </div>\n  </Fragment>\n)\n\nconst Login = props => {\n  const [skin, setSkin] = useSkin()\n  const ability = useContext(AbilityContext)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [email, setEmail] = useState('beliayamcom@gmail.com')\n  const [password, setPassword] = useState('bac.beliayamcom')\n\n  const { register, errors, handleSubmit } = useForm()\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n\n  const onSubmit = async () => {\n    if (isObjEmpty(errors)) {\n      const request = {\n        method: 'POST',\n        data: {\n          email,\n          password\n        }\n      }\n      try {\n        const res = await fetcher(LOGIN_URL, request)\n        const { admin, token } = res.data.data\n        const data = {\n          id: admin._id,\n          name: admin.name,\n          username: admin.username,\n          email: admin.email,\n          role: admin.role.roleName,\n          ability: [\n            {\n              action: 'manage',\n              subject: 'all'\n            }\n          ],\n          accessToken: token.accessToken,\n          refreshToken: token.refreshToken\n\n        }\n        dispatch(handleLogin(data))\n        ability.update(data.ability)\n        history.push(getHomeRouteForLoggedInUser(admin.role.roleName))\n        toast.success(\n          <ToastContent name={data.fullName || data.username} role={data.role} />,\n          { transition: Slide, hideProgressBar: true, autoClose: 8000 }\n        )\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n\n  return (\n    <div className='auth-wrapper auth-v2'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n          <img src={Logo} alt=\"\" />\n          <h2 className='brand-text text-primary ml-1'>Beliayam.com</h2>\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login V2' />\n          </div>\n        </Col>\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n            <CardTitle tag='h2' className='font-weight-bold mb-1'>\n              Selamat Datang di Dashboard! 👋\n            </CardTitle>\n            <CardText className='mb-2'>Silahkan Login dengan mengisi data dibawah</CardText>\n            <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\n              <FormGroup>\n                <Label className='form-label' for='login-email'>\n                  Email\n                </Label>\n                <Input\n                  autoFocus\n                  type='email'\n                  value={email}\n                  id='login-email'\n                  name='login-email'\n                  placeholder='john@example.com'\n                  onChange={e => setEmail(e.target.value)}\n                  className={classnames({ 'is-invalid': errors['login-email'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <div className='d-flex justify-content-between'>\n                  <Label className='form-label' for='login-password'>\n                    Password\n                  </Label>\n                  <Link to='/forgot-password'>\n                    <small>Lupa Password?</small>\n                  </Link>\n                </div>\n                <InputPasswordToggle\n                  value={password}\n                  id='login-password'\n                  name='login-password'\n                  className='input-group-merge'\n                  onChange={e => setPassword(e.target.value)}\n                  className={classnames({ 'is-invalid': errors['login-password'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <CustomInput type='checkbox' className='custom-control-Primary' id='remember-me' label='Ingat saya' />\n              </FormGroup>\n              <Button.Ripple type='submit' color='primary' block>\n                Sign in\n              </Button.Ripple>\n            </Form>\n            <p className='text-center mt-2'>\n              <span className='mr-25'>Belum punya akun?</span>\n              <Link to='/misc/not-authorized'>\n                <span>Buat baru</span>\n              </Link>\n            </p>\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Login\n","// auth url\r\nexport const REFRESH_TOKEN = 'https://be-dev.beliayam.com/api/v1/admin/auth/refresh-token'\r\nexport const LOGIN_URL = 'https://be-dev.beliayam.com/api/v1/admin/auth/login'\r\n\r\n// user url\r\nexport const GET_ALL_DATA_USER = 'https://be-dev.beliayam.com/api/v1/admin/users'\r\nexport const GET_USER_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/users/${id}`\r\n\r\n// category url\r\nexport const GET_CATEGORY = 'https://be-dev.beliayam.com/api/v1/admin/category'\r\nexport const GET_CATEGORY_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/category/${id}`\r\nexport const GET_CATEGORY_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/category/${slug}`\r\n\r\n// product url\r\nexport const GET_PRODUCT = 'https://be-dev.beliayam.com/api/v1/admin/product'\r\nexport const GET_PRODUCT_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/product/${id}`\r\nexport const GET_PRODUCT_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/product/${slug}`\r\n\r\n// <<<<<<< HEAD\r\n// charge url\r\nexport const GET_CHARGE = 'https://be-dev.beliayam.com/api/v1/admin/charge'\r\nexport const GET_CHARGE_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/charge/${id}`\r\n\r\n\r\n// promo url\r\nexport const GET_PROMO = 'https://be-dev.beliayam.com/api/v1/admin/promo'\r\nexport const GET_PROMO_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/promo/${id}`\r\nexport const GET_PROMO_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/promo/${slug}`\r\n// >>>>>>> 65b4bea69b016adb3bed08d5e9551403de497464\r\n\r\n// Voucher\r\nexport const GET_VOUCHER = 'https://be-dev.beliayam.com/api/v1/admin/voucher'\r\nexport const GET_VOUCHER_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/voucher/${id}`\r\nexport const GET_VOUCHER_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/voucher/${slug}`\r\n","import axios from 'axios'\r\nimport { REFRESH_TOKEN } from './Url'\r\n\r\naxios.defaults.baseURL = 'https://be-dev.beliayam.com/'\r\naxios.defaults.headers.common['Authorization'] = 'Bearer token'\r\nconst axiosApiInstance = axios.create()\r\n\r\nconst getToken = (accessToken) => {\r\n    return localStorage.getItem(accessToken)\r\n}\r\n\r\nconst axiosInterceptor = () => {\r\n    axiosApiInstance.interceptors.request.use(async (config) => {\r\n        if (!config.headers.Authorization) {\r\n            const plainToken = getToken()\r\n            const token = plainToken\r\n            if (token) {\r\n                config.headers.Authorization = `Bearer ${getToken()}`\r\n            }\r\n        }\r\n        return config\r\n    })\r\n}\r\n\r\nconst axiosInterceptorResponse = async () => {\r\n    axios.interceptors.response.use(\r\n        response => {\r\n            return response\r\n        },\r\n        error => {\r\n            if (error.response.status !== 401) {\r\n                return Promise.reject(error)\r\n            }\r\n            const tokens = {\r\n                accessToken: localStorage.getItem('accessToken'),\r\n                refreshToken: localStorage.getItem('refreshToken')\r\n            }\r\n\r\n            return axios\r\n                .post(REFRESH_TOKEN, tokens)\r\n                .then(response => {\r\n                    localStorage.setItem('accessToken', response.data.token.accessToken)\r\n                    localStorage.setItem('refreshToken', response.data.token.refreshToken)\r\n\r\n                    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.token.accessToken}`\r\n\r\n                    error.hasRefreshedToken = true\r\n                    return Promise.reject(tokenError)\r\n                }).catch(() => {\r\n                    const tokenError = new Error(\"Cannot refresh token\")\r\n                    tokenError.originalError = error\r\n                    return Promise.reject(tokenError)\r\n                })\r\n        }\r\n\r\n\r\n    )\r\n}\r\n\r\nfunction axiosWithTokenRefresh(config) {\r\n    return axios(config).catch(error => {\r\n        return error.hasRefreshedToken ? axios(config) : Promise.reject(error)\r\n    })\r\n}\r\n\r\n\r\nexport const fetcher = async (url, config) => {\r\n    //   const { getLocalStorage } = localStorageHooks()\r\n    //   const roleId = getLocalStorage(LOCALSTORAGE_KEY.ROLE_ID)\r\n\r\n    const header = {\r\n        ...config,\r\n        url,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            ...config?.headers\r\n        }\r\n    }\r\n\r\n    try {\r\n        axiosInterceptor()\r\n        // axiosWithTokenRefresh()\r\n        const res = await axios.request(header)\r\n\r\n        if (res) {\r\n            // axiosInterceptorResponse()\r\n            return res\r\n        }\r\n    } catch (err) {\r\n        throw err?.response\r\n    }\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = props => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Input\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : '············'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName, componentName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName, componentName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n"],"sourceRoot":""}