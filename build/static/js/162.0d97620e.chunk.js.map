{"version":3,"sources":["views/order/voucher/list/Sidebar.js","views/order/voucher/list/columns.js","views/order/voucher/list/Table.js","views/order/voucher/list/index.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardHeader.js","@core/components/sidebar/index.js"],"names":["SidebarNewVoucher","open","toggleSidebar","dispatch","useDispatch","useForm","register","errors","handleSubmit","size","title","headerClassName","contentClassName","Form","onSubmit","values","isObjEmpty","addVoucher","voucherName","voucherCode","discountBy","discountValue","discountStart","discountEnd","minimumOrderValue","termsAndConditions","FormGroup","Label","className","Input","name","id","placeholder","innerRef","required","classnames","type","color","outline","onClick","centerModal","useState","centeredModal","setCenteredModal","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","Button","statusObj","columns","minWidth","selector","sortable","cell","row","Math","floor","random","to","_id","chargeBy","formatDateTime","Badge","pill","isActive","UncontrolledDropdown","DropdownToggle","tag","DropdownMenu","right","DropdownItem","Link","store","getVoucherById","e","preventDefault","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","Row","Col","xl","for","CustomInput","value","onChange","style","width","padding","backgroundPosition","target","Ripple","VoucherList","useSelector","state","vouchers","setSearchTerm","currentPage","setCurrentPage","setRowsPerPage","sortPerPage","orderBy","sidebarOpen","setSidebarOpen","label","number","currentStatus","setCurrentStatus","useEffect","getVoucher","page","show","sortBy","Card","CardHeader","CardTitle","CardBody","md","theme","selectThemeColors","isClearable","classNamePrefix","options","data","perPage","status","q","noHeader","pagination","subHeader","responsive","paginationServer","sortIcon","paginationComponent","count","Number","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","length","allData","slice","dataToRender","subHeaderComponent","parseInt","currentTarget","val","Sidebar","Table","propTypes","tagPropType","PropTypes","string","cssModule","object","oneOfType","func","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","bodyClassName","wrapperClassName","children","closeBtn","rest","renderCloseBtn","modalClassName","undefined","String","close"],"mappings":"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","file":"static/js/162.0d97620e.chunk.js","sourcesContent":["// ** Custom Components\r\nimport Sidebar from '@components/sidebar'\r\n\r\nimport { isObjEmpty } from '@utils'\r\n\r\nimport classnames from 'classnames'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Button, FormGroup, Label, FormText, Form, Input } from 'reactstrap'\r\n\r\nimport { addVoucher } from '../store/action'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst SidebarNewVoucher = ({ open, toggleSidebar }) => {\r\n   const dispatch = useDispatch()\r\n\r\n   const { register, errors, handleSubmit } = useForm()\r\n\r\n   const onSubmit = values => {\r\n      if (isObjEmpty(errors)) {\r\n         toggleSidebar()\r\n         dispatch(\r\n            addVoucher({\r\n               voucherName: values.voucherName,\r\n               voucherCode: values.voucherCode,\r\n               discountBy: values.discountBy,\r\n               discountValue: values.discountValue,\r\n               discountStart: values.discountStart,\r\n               discountEnd: values.discountEnd,\r\n               minimumOrderValue: values.minimumOrderValue,\r\n               termsAndConditions: values.termsAndConditions,\r\n            })\r\n         )\r\n      }\r\n   }\r\n\r\n   return (\r\n      <Sidebar\r\n         size='lg'\r\n         open={open}\r\n         title='New Charge'\r\n         headerClassName='mb-1'\r\n         contentClassName='pt-0'\r\n         toggleSidebar={toggleSidebar}>\r\n         <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <FormGroup>\r\n               <Label>\r\n                  Voucher Name <span className='text-danger'>*</span>\r\n               </Label>\r\n               <Input\r\n                  name='voucherName'\r\n                  id='voucherName'\r\n                  placeholder='Voucher Name ...'\r\n                  innerRef={register({ required: true })}\r\n                  className={classnames({ 'is-invalid': errors['voucherName'] })}\r\n               />\r\n            </FormGroup>\r\n            <FormGroup>\r\n               <Label>\r\n                  Voucher Code <span className='text-danger'>*</span>\r\n               </Label>\r\n               <Input\r\n                  name='voucherCode'\r\n                  id='voucherCode'\r\n                  placeholder='Voucher Code ...'\r\n                  innerRef={register({ required: true })}\r\n                  className={classnames({ 'is-invalid': errors['voucherCode'] })}\r\n               />\r\n            </FormGroup>\r\n            <FormGroup>\r\n               <Label>\r\n                  Discount By <span className='text-danger'>*</span>\r\n               </Label>\r\n               <Input\r\n                  name='discountBy'\r\n                  id='discountBy'\r\n                  placeholder='Discount By ...'\r\n                  innerRef={register({ required: true })}\r\n                  className={classnames({ 'is-invalid': errors['discountBy'] })}\r\n               />\r\n            </FormGroup>\r\n            <FormGroup>\r\n               <Label>\r\n                  Discount Value <span className='text-danger'>*</span>\r\n               </Label>\r\n               <Input\r\n                  name='discountValue'\r\n                  id='discountValue'\r\n                  placeholder='Charge Value ...'\r\n                  innerRef={register({ required: true })}\r\n                  className={classnames({ 'is-invalid': errors['discountValue'] })}\r\n               />\r\n            </FormGroup>\r\n            <FormGroup>\r\n               <Label>\r\n                  Discount Start <span className='text-danger'>*</span>\r\n               </Label>\r\n               <Input\r\n                  type='datetime-local'\r\n                  name='discountStart'\r\n                  id='discountStart'\r\n                  placeholder='Discount Start ...'\r\n                  innerRef={register({ required: true })}\r\n                  className={classnames({ 'is-invalid': errors['discountStart'] })}\r\n               />\r\n            </FormGroup>\r\n            <FormGroup>\r\n               <Label>\r\n                  Discount End <span className='text-danger'>*</span>\r\n               </Label>\r\n               <Input\r\n                  type='datetime-local'\r\n                  name='discountEnd'\r\n                  id='discountEnd'\r\n                  placeholder='Discount End ...'\r\n                  innerRef={register({ required: true })}\r\n                  className={classnames({ 'is-invalid': errors['discountEnd'] })}\r\n               />\r\n            </FormGroup>\r\n            <FormGroup>\r\n               <Label>\r\n                  Trems And Condition <span className='text-danger'>*</span>\r\n               </Label>\r\n               <Input\r\n                  name='termsAndConditions'\r\n                  id='termsAndConditions'\r\n                  placeholder='Trems And Condition ...'\r\n                  // value={name}\r\n                  innerRef={register({ required: true })}\r\n                  className={classnames({\r\n                     'is-invalid': errors['termsAndConditions'],\r\n                  })}\r\n               />\r\n            </FormGroup>\r\n            <Button type='submit' className='mr-1' color='primary'>\r\n               Submit\r\n            </Button>\r\n            <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\r\n               Cancel\r\n            </Button>\r\n         </Form>\r\n      </Sidebar>\r\n   )\r\n}\r\n\r\nexport default SidebarNewVoucher\r\n","import { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { deleteVoucher, getVoucherById } from '../store/action'\r\nimport { store } from '@store/storeConfig/store'\r\n\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap'\r\nimport {  MoreVertical, FileText, Trash2, Archive } from 'react-feather'\r\n\r\nimport { formatDateTime, numberFormat, toCamelCase } from \"@utils\"\r\n\r\n\r\nconst renderClient = row => {\r\n   const stateNum = Math.floor(Math.random() * 6),\r\n      states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\r\n      color = states[stateNum]\r\n   // if (row.avatar.length) {\r\n   //   return <Avatar className='mr-1' img={row.avatar} width='32' height='32' />\r\n   // } else {\r\n   //   return <Avatar color={color || 'primary'} className='mr-1' content={row.fullName} initials />\r\n   // }\r\n}\r\n\r\nconst centerModal = () => {\r\n   const [centeredModal, setCenteredModal] = useState(false)\r\n   return (\r\n      <Modal isOpen={centeredModal} toggle={() => setCenteredModal(!centeredModal)} className='modal-dialog-centered'>\r\n         <ModalHeader toggle={() => setCenteredModal(!centeredModal)}>Vertically Centered</ModalHeader>\r\n         <ModalBody>\r\n            Oat cake ice cream candy chocolate cake chocolate cake cotton candy dragée apple pie. Brownie carrot cake\r\n            candy canes bonbon fruitcake topping halvah. Cake sweet roll cake cheesecake cookie chocolate cake\r\n            liquorice.\r\n         </ModalBody>\r\n         <ModalFooter>\r\n            <Button color='primary' onClick={() => setCenteredModal(!centeredModal)}>\r\n               Accept\r\n            </Button>{' '}\r\n         </ModalFooter>\r\n      </Modal>\r\n   )\r\n}\r\n\r\nconst statusObj = {\r\n   pending: 'light-warning',\r\n   active: 'light-success',\r\n   inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n   {\r\n      name: 'Voucher',\r\n      minWidth: '172px',\r\n      selector: 'fullName',\r\n      sortable: true,\r\n      cell: row => (\r\n         <div className='d-flex justify-content-left align-items-center'>\r\n            {renderClient(row)}\r\n            <div className='d-flex flex-column'>\r\n               <Link\r\n                  to={`/order/voucher/view/${row._id}`}\r\n                  className='user-name text-truncate mb-0'\r\n               // onClick={() => store.dispatch(getCategoryById(row._id))}\r\n               >\r\n                  <span className='font-weight-bold'>{row.voucherName}</span>\r\n               </Link>\r\n               <small className='text-truncate text-muted mb-0'>{row.chargeBy}</small>\r\n            </div>\r\n         </div>\r\n      )\r\n   },\r\n   {\r\n      name: 'Code',\r\n      minWidth: '138px',\r\n      selector: 'role',\r\n      sortable: true,\r\n      cell: row => row.voucherCode\r\n   },\r\n   {\r\n      name: 'Minimum Order',\r\n      minWidth: '172px',\r\n      selector: 'role',\r\n      sortable: true,\r\n      cell: row => row.minimumOrderValue\r\n   },\r\n   {\r\n      name: 'Discount Start',\r\n      minWidth: '172px',\r\n      selector: 'role',\r\n      sortable: true,\r\n      cell: row => formatDateTime(row.discountStart)\r\n   },\r\n   {\r\n      name: 'Discount End',\r\n      minWidth: '172px',\r\n      selector: 'role',\r\n      sortable: true,\r\n      cell: row => formatDateTime(row.discountEnd)\r\n   },\r\n   {\r\n      name: 'Status',\r\n      minWidth: '138px',\r\n      selector: 'status',\r\n      sortable: true,\r\n      cell: row => (\r\n         <Badge className='text-capitalize light-success' color={statusObj['active']} pill>\r\n            {row.isActive === true && <>active</>}\r\n         </Badge>\r\n      )\r\n   },\r\n   {\r\n      name: 'Actions',\r\n      minWidth: '100px',\r\n      cell: row => (\r\n         <UncontrolledDropdown>\r\n            <DropdownToggle tag='div' className='btn btn-sm'>\r\n               <MoreVertical size={14} className='cursor-pointer' />\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n               <DropdownItem\r\n                  tag={Link}\r\n                  to={`/order/voucher/view/${row._id}`}\r\n                  className='w-100'\r\n                  onClick={() => store.dispatch(getVoucherById(row._id))}\r\n               >\r\n                  <FileText size={14} className='mr-50' />\r\n                  <span className='align-middle'>Details</span>\r\n               </DropdownItem>\r\n               <DropdownItem\r\n                  tag={Link}\r\n                  to={`/order/voucher/edit/${row._id}`}\r\n                  className='w-100'\r\n                  onClick={() => store.dispatch(getVoucherById(row._id))}\r\n               >\r\n                  <Archive size={14} className='mr-50' />\r\n                  <span className='align-middle'>Edit</span>\r\n               </DropdownItem>\r\n               <DropdownItem className='w-100' onClick={(e) => e.preventDefault(centerModal)}>\r\n                  <Trash2 size={14} className='mr-50' />\r\n                  <span className='align-middle'>Delete</span>\r\n               </DropdownItem>\r\n            </DropdownMenu>\r\n         </UncontrolledDropdown>\r\n         \r\n      )\r\n      \r\n   }\r\n]","import { Fragment, useState, useEffect } from 'react'\r\n\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { columns } from './columns'\r\n\r\nimport { getVoucher } from '../store/action'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Select from 'react-select'\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\nimport { selectThemeColors } from '@utils'\r\nimport { Card, CardHeader, CardTitle, CardBody, Input, Row, Col, Label, CustomInput, Button } from 'reactstrap'\r\n\r\nconst CustomHeader = ({ toggleSidebar, handlePerPage, rowsPerPage, handleFilter, searchTerm }) => {\r\n   return (\r\n      <div className='invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75'>\r\n         <Row>\r\n            <Col xl='6' className='d-flex align-items-center p-0'>\r\n               <div className='d-flex align-items-center w-100'>\r\n                  <Label for='rows-per-page'>Show</Label>\r\n                  <CustomInput\r\n                     className='form-control mx-50'\r\n                     type='select'\r\n                     id='rows-per-page'\r\n                     value={rowsPerPage}\r\n                     onChange={handlePerPage}\r\n                     style={{\r\n                        width: '5rem',\r\n                        padding: '0 0.8rem',\r\n                        backgroundPosition: 'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\r\n                     }}\r\n                  >\r\n                     <option value='10'>10</option>\r\n                     <option value='25'>25</option>\r\n                     <option value='50'>50</option>\r\n                  </CustomInput>\r\n                  <Label for='rows-per-page'>Entries</Label>\r\n               </div>\r\n            </Col>\r\n            <Col\r\n               xl='6'\r\n               className='d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1'\r\n            >\r\n               <div className='d-flex align-items-center mb-sm-0 mb-1 mr-1'>\r\n                  <Label className='mb-0' for='search-invoice'>\r\n                     Search:\r\n                  </Label>\r\n                  <Input\r\n                     id='search-invoice'\r\n                     className='ml-50 w-100'\r\n                     type='text'\r\n                     value={searchTerm}\r\n                     onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n               </div>\r\n               <Button.Ripple color='primary' onClick={toggleSidebar}>\r\n                  New Voucher\r\n               </Button.Ripple>\r\n            </Col>\r\n         </Row>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst VoucherList = () => {\r\n   const dispatch = useDispatch()\r\n   const store = useSelector(state => state.vouchers)\r\n\r\n   const [searchTerm, setSearchTerm] = useState('')\r\n   const [currentPage, setCurrentPage] = useState(1)\r\n   const [rowsPerPage, setRowsPerPage] = useState(10)\r\n   const [sortPerPage, setSortPerPage] = useState('ASC')\r\n   const [orderBy, setOrderBy] = useState('voucherCode')\r\n   const [sidebarOpen, setSidebarOpen] = useState(false)\r\n\r\n   const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\r\n\r\n   const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n\r\n   useEffect(() => {\r\n      dispatch(\r\n         getVoucher({\r\n            page: currentPage,\r\n            show: rowsPerPage,\r\n            sortBy: sortPerPage,\r\n            // status: currentStatus.value,\r\n            orderBy\r\n         })\r\n      )\r\n   }, [dispatch])\r\n\r\n   const statusOptions = [\r\n      { value: 'pending', label: 'Select Status', number: 0 },\r\n      { value: 'active', label: 'Pending', number: 1 },\r\n      { value: 'inactive', label: 'Active', number: 2 }\r\n   ]\r\n\r\n   const handlePagination = page => {\r\n      dispatch(\r\n         getVoucher({\r\n            page: page.selected + 1,\r\n            perPage: rowsPerPage,\r\n            // role: currentRole.value,\r\n            // currentPlan: currentPlan.value,\r\n            status: currentStatus.value,\r\n            q: searchTerm\r\n         })\r\n      )\r\n      setCurrentPage(page.selected + 1)\r\n   }\r\n\r\n   const handlePerPage = e => {\r\n      const value = parseInt(e.currentTarget.value)\r\n      dispatch(\r\n         getVoucher({\r\n            page: currentPage,\r\n            perPage: value,\r\n            // role: currentRole.value,\r\n            // currentPlan: currentPlan.value,\r\n            status: currentStatus.value,\r\n            q: searchTerm\r\n         })\r\n      )\r\n      setRowsPerPage(value)\r\n   }\r\n\r\n   const handleFilter = val => {\r\n      setSearchTerm(val)\r\n      dispatch(\r\n         getVoucher({\r\n            page: currentPage,\r\n            perPage: rowsPerPage,\r\n            // role: currentRole.value,\r\n            // currentPlan: currentPlan.value,\r\n            status: currentStatus.value,\r\n            q: val\r\n         })\r\n      )\r\n   }\r\n\r\n   const CustomPagination = () => {\r\n      const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n      return (\r\n         <ReactPaginate\r\n            previousLabel={''}\r\n            nextLabel={''}\r\n            pageCount={count || 1}\r\n            activeClassName='active'\r\n            forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n            onPageChange={page => handlePagination(page)}\r\n            pageClassName={'page-item'}\r\n            nextLinkClassName={'page-link'}\r\n            nextClassName={'page-item next'}\r\n            previousClassName={'page-item prev'}\r\n            previousLinkClassName={'page-link'}\r\n            pageLinkClassName={'page-link'}\r\n            containerClassName={'pagination react-paginate justify-content-end my-2 pr-1'}\r\n         />\r\n      )\r\n   }\r\n\r\n   const dataToRender = () => {\r\n      const filters = {\r\n         // role: currentRole.value,\r\n         // currentPlan: currentPlan.value,\r\n         status: currentStatus.value,\r\n         q: searchTerm\r\n      }\r\n\r\n      const isFiltered = Object.keys(filters).some(function (k) {\r\n         return filters[k].length > 0\r\n      })\r\n\r\n      if (store?.data?.length > 0) {\r\n         return store?.data\r\n      } else if (store?.data?.length === 0 && isFiltered) {\r\n         return []\r\n      } else {\r\n         return store?.allData?.slice(0, rowsPerPage)\r\n      }\r\n   }\r\n\r\n   return (\r\n      <Fragment>\r\n         <Card>\r\n            <CardHeader>\r\n               <CardTitle tag='h4'>Search Filter</CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n               <Row>\r\n                  {/* <Col md='4'>\r\n                            <Select\r\n                                isClearable={false}\r\n                                theme={selectThemeColors}\r\n                                className='react-select'\r\n                                classNamePrefix='select'\r\n                                // options={roleOptions}\r\n                                // value={currentRole}\r\n                                onChange={data => {\r\n                                    // setCurrentRole(data)\r\n                                    dispatch(\r\n                                        getData({\r\n                                            page: currentPage,\r\n                                            perPage: rowsPerPage,\r\n                                            role: data.value,\r\n                                            currentPlan: currentPlan.value,\r\n                                            status: currentStatus.value,\r\n                                            q: searchTerm\r\n                                        })\r\n                                    )\r\n                                }}\r\n                            />\r\n                        </Col> */}\r\n                  {/* <Col className='my-md-0 my-1' md='4'>\r\n                            <Select\r\n                                theme={selectThemeColors}\r\n                                isClearable={false}\r\n                                className='react-select'\r\n                                classNamePrefix='select'\r\n                                options={planOptions}\r\n                                value={currentPlan}\r\n                                onChange={data => {\r\n                                    setCurrentPlan(data)\r\n                                    dispatch(\r\n                                        getData({\r\n                                            page: currentPage,\r\n                                            perPage: rowsPerPage,\r\n                                            // role: currentRole.value,\r\n                                            currentPlan: data.value,\r\n                                            status: currentStatus.value,\r\n                                            q: searchTerm\r\n                                        })\r\n                                    )\r\n                                }}\r\n                            />\r\n                        </Col> */}\r\n                  <Col md='4'>\r\n                     <Select\r\n                        theme={selectThemeColors}\r\n                        isClearable={false}\r\n                        className='react-select'\r\n                        classNamePrefix='select'\r\n                        options={statusOptions}\r\n                        value={currentStatus}\r\n                        onChange={data => {\r\n                           setCurrentStatus(data)\r\n                           dispatch(\r\n                              getVoucher({\r\n                                 page: currentPage,\r\n                                 perPage: rowsPerPage,\r\n                                 status: data.value,\r\n                                 q: searchTerm\r\n                              })\r\n                           )\r\n                        }}\r\n                     />\r\n                  </Col>\r\n               </Row>\r\n            </CardBody>\r\n         </Card>\r\n\r\n         <Card>\r\n            <DataTable\r\n               noHeader\r\n               pagination\r\n               subHeader\r\n               responsive\r\n               paginationServer\r\n               columns={columns}\r\n               sortIcon={<ChevronDown />}\r\n               className='react-dataTable'\r\n               paginationComponent={CustomPagination}\r\n               data={dataToRender()}\r\n               subHeaderComponent={\r\n                  <CustomHeader\r\n                     toggleSidebar={toggleSidebar}\r\n                     handlePerPage={handlePerPage}\r\n                     rowsPerPage={rowsPerPage}\r\n                     searchTerm={searchTerm}\r\n                     handleFilter={handleFilter}\r\n                  />\r\n               }\r\n            />\r\n         </Card>\r\n\r\n         <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n      </Fragment>\r\n   )\r\n}\r\n\r\nexport default VoucherList","import Table from './Table'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst VoucherList = () => {\r\n   return (\r\n      <div className='app-user-list'>\r\n         <Table />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default VoucherList","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","// ** Third Party Components\nimport { X } from 'react-feather'\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const {\n    width,\n    open,\n    toggleSidebar,\n    size,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    className,\n    title,\n    children,\n    closeBtn,\n    ...rest\n  } = props\n\n  // ** If user passes custom close btn render that else default close btn\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      contentClassName={classnames({\n        [contentClassName]: contentClassName\n      })}\n      modalClassName={classnames('modal-slide-in', {\n        [wrapperClassName]: wrapperClassName\n      })}\n      className={classnames({\n        [className]: className,\n        'sidebar-lg': size === 'lg',\n        'sidebar-sm': size === 'sm'\n      })}\n      /*eslint-disable */\n      {...(width !== undefined\n        ? {\n            style: { width: String(width) + 'px' }\n          }\n        : {})}\n      /*eslint-enable */\n      {...rest}\n    >\n      <ModalHeader\n        className={classnames({\n          [headerClassName]: headerClassName\n        })}\n        toggle={toggleSidebar}\n        close={renderCloseBtn}\n        tag='div'\n      >\n        <h5 className='modal-title'>\n          <span className='align-middle'>{title}</span>\n        </h5>\n      </ModalHeader>\n      <ModalBody\n        className={classnames('flex-grow-1', {\n          [bodyClassName]: bodyClassName\n        })}\n      >\n        {children}\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default Sidebar\n\n// ** PropTypes\nSidebar.propTypes = {\n  title: Proptypes.string.isRequired,\n  open: Proptypes.bool.isRequired,\n  toggleSidebar: Proptypes.func.isRequired,\n  size: Proptypes.oneOf(['sm', 'lg']),\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n}\n"],"sourceRoot":""}