{"version":3,"sources":["views/order/promo/edit/Account.js","views/order/promo/edit/index.js","utility/Url.js","utility/axiosHooks.js","views/components/toasts/ToastUpdate.js","views/order/promo/store/action/index.js"],"names":["PromoAccountTab","selectedPromo","dispatch","useDispatch","id","useParams","useForm","register","errors","handleSubmit","useState","centeredModal","setCenteredModal","setImg","promoData","setPromoData","useEffect","getPromoById","centerModal","Modal","isOpen","toggle","className","ModalHeader","ModalBody","ModalFooter","Button","color","onClick","Row","Col","sm","Media","body","name","Ripple","tag","Label","size","type","hidden","onChange","e","reader","FileReader","files","target","onload","result","readAsDataURL","accept","outline","Form","preventDefault","md","FormGroup","for","Input","placeholder","defaultValue","innerRef","required","slug","tags","promoValue","FormText","promoBy","isMulti","options","vale","label","products","rows","termsAndConditions","description","values","isObjEmpty","updatePromo","image_promo","toast","success","ToastUpdate","icon","content","transition","Slide","hideProgressBar","autoClose","PromoEdit","activeTab","setActiveTab","store","useSelector","state","promos","undefined","Card","CardBody","Nav","pills","NavItem","NavLink","active","TabContent","TabPane","tabId","Alert","to","REFRESH_TOKEN","LOGIN_URL","GET_ALL_DATA_USER","GET_USER_BYID","GET_USER_BYACTIVE","GET_CATEGORY","GET_CATEGORY_BYID","GET_PRODUCT","GET_PRODUCT_BYID","GET_CHARGE","GET_CHARGE_BYID","GET_PROMO","GET_PROMO_BYID","GET_VOUCHER","GET_VOUCHER_BYID","GET_ORDER","GET_ORDER_BYID","axios","defaults","baseURL","headers","common","axiosApiInstance","create","getToken","accessToken","localStorage","getItem","fetcher","url","config","a","header","interceptors","request","use","Authorization","res","response","getAllDataPromo","GET_ALL_DATA_PROMO","then","console","log","data","getPromo","params","totalPages","total","catch","err","addPromo","promo","getState","req","method","deletePromo","promoStart","promoEnd","isActive","platform","formData","FormData","set"],"mappings":"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","file":"static/js/146.a0653c0c.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updatePromo, getPromoById } from '../store/action'\r\nimport { isObjEmpty } from '@utils'\r\n\r\nimport Select from 'react-select'\r\nimport { toast, Slide } from 'react-toastify'\r\nimport ToastUpdate from '../../../components/toasts/ToastUpdate'\r\nimport { Check, Edit, Trash2 } from 'react-feather'\r\nimport { \r\n   Media, \r\n   Row, \r\n   Col, \r\n   Button, \r\n   Form, \r\n   Input, \r\n   Label, \r\n   FormGroup, \r\n   ModalHeader, \r\n   ModalBody,\r\n   ModalFooter, \r\n   Modal,\r\n   FormText } from 'reactstrap'\r\n\r\nconst PromoAccountTab = ({selectedPromo}) => {\r\n   const dispatch = useDispatch(),\r\n      { id } = useParams()\r\n   \r\n   const { register, errors, handleSubmit } = useForm()\r\n   const [centeredModal, setCenteredModal] = useState(false)\r\n\r\n   const [img, setImg] = useState(null)\r\n   const [promoData, setPromoData] = useState(null)\r\n\r\n\r\n   const onChange = e => {\r\n      const reader = new FileReader(),\r\n         files = e.target.files\r\n      reader.onload = function () {\r\n         setImg(reader.result)\r\n      }\r\n      reader.readAsDataURL(files[0])\r\n   }\r\n\r\n   useEffect(() => {\r\n      dispatch(getPromoById(id))\r\n      // if (selectedCategory !== null || (selectedCategory !== null && categoryData !== null && selectedCategory?._id !== categoryData?._id)) {\r\n      //    // setCategoryData(selectedCategory)\r\n\r\n      //    // if (selectedCategory?.avatar?.length) {\r\n      //    //    return setImg(selectedCategory?.avatar)\r\n      //    // } else {\r\n      //    //    return setImg(null)\r\n      //    // }\r\n      // }\r\n   }, [id])\r\n\r\n   useEffect(() => {\r\n      setPromoData(selectedPromo)\r\n   }, [selectedPromo])\r\n\r\n\r\n   const onSubmit = (values) => {\r\n      if (isObjEmpty(errors)) {\r\n         dispatch(\r\n            updatePromo(id, {\r\n               name: values.name,\r\n               slug: values.slug,\r\n               tags: values.tags,\r\n               image_promo: values.image_promo,\r\n               description: values.description,\r\n               termsAndConditions: values.termsAndConditions,\r\n               products: values.products\r\n            })\r\n         )\r\n      }\r\n\r\n      setCenteredModal(!centeredModal)\r\n\r\n      toast.success(\r\n         <ToastUpdate\r\n            icon={<Check size={12} />}\r\n            content='Promo'\r\n         />,\r\n         { transition: Slide, hideProgressBar: true, autoClose: 3000 }\r\n      )\r\n   }\r\n\r\n   const options = [\r\n      {vale: 'broiler', label: 'broiler'},\r\n      { vale: 'pejantan', label: 'pejantan' },\r\n   ]\r\n   \r\n\r\n   const centerModal = () => {\r\n      return (\r\n         <Modal isOpen={centeredModal} toggle={() => setCenteredModal(!centeredModal)} className='modal-dialog-centered'>\r\n            <ModalHeader toggle={() => setCenteredModal(!centeredModal)}>Vertically Centered</ModalHeader>\r\n            <ModalBody>\r\n               Oat cake ice cream candy chocolate cake chocolate cake cotton candy dragée apple pie. Brownie carrot cake\r\n               candy canes bonbon fruitcake topping halvah. Cake sweet roll cake cheesecake cookie chocolate cake\r\n               liquorice.\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color='primary' onClick={() => setCenteredModal(!centeredModal)}>\r\n                  Accept\r\n               </Button>{' '}\r\n            </ModalFooter>\r\n         </Modal>\r\n      )\r\n   }\r\n\r\n   if (!promoData) {\r\n      return null\r\n   } else {\r\n      return (\r\n         <Row>\r\n            <Col sm='12'>\r\n               <Media className='mb-2'>\r\n                  {/* {renderUserAvatar()} */}\r\n                  <Media className='mt-50' body>\r\n                     <h4>{selectedPromo.name} </h4>\r\n                     <div className='d-flex flex-wrap mt-1 px-0'>\r\n                        <Button.Ripple id='change-img' tag={Label} className='mr-75 mb-0' color='primary'>\r\n                           <span className='d-none d-sm-block'>Change</span>\r\n                           <span className='d-block d-sm-none'>\r\n                              <Edit size={14} />\r\n                           </span>\r\n                           <input type='file' hidden id='change-img' onChange={onChange} accept='image/*' />\r\n                        </Button.Ripple>\r\n                        <Button.Ripple color='secondary' outline>\r\n                           <span className='d-none d-sm-block'>Remove</span>\r\n                           <span className='d-block d-sm-none'>\r\n                              <Trash2 size={14} />\r\n                           </span>\r\n                        </Button.Ripple>\r\n                     </div>\r\n                  </Media>\r\n               </Media>\r\n            </Col>\r\n            <Col sm='12'>\r\n               <Form onClick={e => e.preventDefault(centerModal)}>\r\n                  <Row>\r\n                     <Col md='4' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='name'>Promo Name</Label>\r\n                           <Input\r\n                              type='text'\r\n                              id='name'\r\n                              name='name'\r\n                              placeholder='Charge Name'\r\n                              defaultValue={promoData.name}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                        </FormGroup>\r\n                     </Col>\r\n                     <Col md='4' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='slug'>Slug</Label>\r\n                           <Input\r\n                              type='text'\r\n                              id='slug'\r\n                              name='slug'\r\n                              placeholder='Charge By...'\r\n                              defaultValue={promoData.slug}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                        </FormGroup>\r\n                     </Col>\r\n                     <Col md='4' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='tags'>Tags</Label>\r\n                           <Input\r\n                              type='text'\r\n                              id='tags'\r\n                              name='tags'\r\n                              placeholder='Charge Value...'\r\n                              defaultValue={promoData.tags}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                        </FormGroup>\r\n                     </Col>\r\n                     {/* <Col md='4' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='image_promo'>Image Promo</Label>\r\n                           <Input\r\n                              type='file'\r\n                              id='image_promo'\r\n                              name='image_promo'\r\n                              placeholder='Short Description....'\r\n                              // defaultValue={promoData.image_promo}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                        </FormGroup>\r\n                     </Col> */}\r\n                     <Col md='4' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='promoValue'>Promo Value</Label>\r\n                           <Input\r\n                              type='number'\r\n                              id='promoValue'\r\n                              name='promoValue'\r\n                              placeholder='Short Description....'\r\n                              defaultValue={promoData.promoValue}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                           <FormText>Hanya masukan nomor (jangan jail)</FormText>\r\n                        </FormGroup>\r\n                     </Col>\r\n                     <Col md='4' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='promoBy'>Promo By</Label>\r\n                           <Input\r\n                              type='text'\r\n                              id='promoBy'\r\n                              name='promoBy'\r\n                              placeholder='Promo By....'\r\n                              defaultValue={promoData.promoBy}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                           <FormText>Price/Percent</FormText>\r\n                        </FormGroup>\r\n                     </Col>\r\n                     <Col md='4' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='products'>Add Products</Label>\r\n                           <Select\r\n                              id='products'\r\n                              name='products'\r\n                              isMulti\r\n                              options={options}\r\n                              placeholder='Add product....'\r\n                              defaultValue={promoData.products}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                           <FormText>Add product in promo</FormText>\r\n                        </FormGroup>\r\n                     </Col>\r\n                     {/* <Col md='4' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='promoStart'>Promo Start</Label>\r\n                           <Input\r\n                              type='datetime-local'\r\n                              id='promoStart'\r\n                              name='promoStart'\r\n                              placeholder='Promo By....'\r\n                              defaultValue={promoData.promoStart}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                        </FormGroup>\r\n                     </Col>\r\n                     <Col md='4' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='promoEnd'>Promo End</Label>\r\n                           <Input\r\n                              type='datetime-local'\r\n                              id='promoEnd'\r\n                              name='promoEnd'\r\n                              placeholder='Promo End....'\r\n                              defaultValue={promoData.promoEnd}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                        </FormGroup>\r\n                     </Col> */}\r\n                     <Col md='12' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='termsAndConditions'>Terms And Condition</Label>\r\n                           <Input\r\n                              type='textarea'\r\n                              no-resize='true'\r\n                              rows=\"8\"\r\n                              id='termsAndConditions'\r\n                              name='termsAndConditions'\r\n                              placeholder='Terms And Condition....'\r\n                              defaultValue={promoData.termsAndConditions}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                        </FormGroup>\r\n                     </Col>\r\n                     <Col md='12' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='description'>Description</Label>\r\n                           <Input\r\n                              type='textarea'\r\n                              id='description'\r\n                              no-resize='true'\r\n                              rows=\"8\"\r\n                              name='description'\r\n                              placeholder='Short Description....'\r\n                              defaultValue={promoData.description}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                        </FormGroup>\r\n                     </Col>\r\n                     <Col className='d-flex flex-sm-row flex-column mt-2' sm='12'>\r\n                        <Button.Ripple onClick={() => setCenteredModal(!centeredModal)} className='mb-1 mb-sm-0 mr-0 mr-sm-1' type='submit' color='primary'>\r\n                           Save Changes\r\n                        </Button.Ripple>\r\n                        <Button.Ripple color='secondary' outline>\r\n                           Reset\r\n                        </Button.Ripple>\r\n                     </Col>\r\n\r\n                        <Modal isOpen={centeredModal} toggle={() => setCenteredModal(!centeredModal)} className='modal-dialog-centered'>\r\n                           <ModalHeader toggle={() => setCenteredModal(!centeredModal)}>Update Promo</ModalHeader>\r\n                           <ModalBody>\r\n                           Apakah anda yakin untuk mengedit data tersebut?, pastikan sudah benar, cek lagi apa sudah yakin?\r\n                           </ModalBody>\r\n                           <ModalFooter>\r\n                           <Button color='primary' onClick={handleSubmit(onSubmit)}>\r\n                              Accept\r\n                           </Button>{' '}\r\n                              <Button color='primary' outline onClick={() => setCenteredModal(!centeredModal)}>\r\n                                 Cancel\r\n                              </Button>{' '}\r\n                           </ModalFooter>\r\n                        </Modal>\r\n\r\n                  </Row>\r\n               </Form>\r\n            </Col>\r\n         </Row>\r\n      )\r\n   }\r\n}\r\n\r\nexport default PromoAccountTab","import { useState, useEffect } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\n\r\nimport PromoAccountTab from './Account'\r\n\r\nimport { getPromoById } from '../store/action'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { Percent } from 'react-feather'\r\nimport { Card, CardBody, Row, Col, Nav, NavItem, NavLink, TabContent, TabPane, Alert } from 'reactstrap'\r\n\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst PromoEdit = () => {\r\n   const [activeTab, setActiveTab] = useState('1'),\r\n      store = useSelector(state => state.promos),\r\n      dispatch = useDispatch(),\r\n      { id } = useParams()\r\n\r\n   const toggle = tab => setActiveTab(tab)\r\n\r\n   useEffect(() => {\r\n      dispatch(getPromoById(id))\r\n      return () => dispatch(getPromoById(id))\r\n   }, [dispatch, id])\r\n\r\n   return store.selectedPromo !== null && store.selectedPromo !== undefined ? (<Row className='app-user-edit'>\r\n      <Col sm='12'>\r\n         <Card>\r\n            <CardBody className='pt-2'>\r\n               <Nav pills>\r\n                  <NavItem>\r\n                     <NavLink active={activeTab === '1'} onClick={() => toggle('1')}>\r\n                        <Percent size={14} />\r\n                        <span className='align-middle d-none d-sm-block'>Promo</span>\r\n                     </NavLink>\r\n                  </NavItem>\r\n                  {/* <NavItem>\r\n                                <NavLink active={activeTab === '2'} onClick={() => toggle('2')}>\r\n                                    <Info size={14} />\r\n                                    <span className='align-middle d-none d-sm-block'>Information</span>\r\n                                </NavLink>\r\n                            </NavItem> */}\r\n                  {/* <NavItem>\r\n                                <NavLink active={activeTab === '3'} onClick={() => toggle('3')}>\r\n                                    <Share2 size={14} />\r\n                                    <span className='align-middle d-none d-sm-block'>Social</span>\r\n                                </NavLink>\r\n                            </NavItem> */}\r\n               </Nav>\r\n               <TabContent activeTab={activeTab}>\r\n                  <TabPane tabId='1'>\r\n                     <PromoAccountTab selectedPromo={store.selectedPromo} />\r\n                  </TabPane>\r\n                  <TabPane tabId='2'>\r\n                     {/* <InfoTab /> */}\r\n                  </TabPane>\r\n                  <TabPane tabId='3'>\r\n                  </TabPane>\r\n               </TabContent>\r\n            </CardBody>\r\n         </Card>\r\n      </Col>\r\n   </Row>) : (\r\n      <Alert color = 'danger'>\r\n         <h4 className = 'alert-heading'>Promo not found</h4 >\r\n      <div className='alert-body'>\r\n         Promo with id: {id} doesn't exist. Check list of all Promos: <Link to='/order/promo/list'>Promos List</Link>\r\n      </div>\r\n      </Alert>\r\n   )\r\n}\r\n\r\nexport default PromoEdit","// auth url\r\nexport const REFRESH_TOKEN = 'https://be-dev.beliayam.com/api/v1/admin/auth/refresh-token'\r\nexport const LOGIN_URL = 'https://be-dev.beliayam.com/api/v1/admin/auth/login'\r\n\r\n// user url\r\nexport const GET_ALL_DATA_USER = 'https://be-dev.beliayam.com/api/v1/admin/users'\r\nexport const GET_USER_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/users/${id}`\r\nexport const GET_USER_BYACTIVE = (active) => `https://be-dev.beliayam.com/api/v1/admin/users/${active}`\r\n\r\n// category url\r\nexport const GET_CATEGORY = 'https://be-dev.beliayam.com/api/v1/admin/category'\r\nexport const GET_CATEGORY_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/category/${id}`\r\nexport const GET_CATEGORY_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/category/${slug}`\r\n\r\n// product url\r\nexport const GET_PRODUCT = 'https://be-dev.beliayam.com/api/v1/admin/product'\r\nexport const GET_PRODUCT_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/product/${id}`\r\nexport const GET_PRODUCT_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/product/${slug}`\r\n\r\n// charge url\r\nexport const GET_CHARGE = 'https://be-dev.beliayam.com/api/v1/admin/charge'\r\nexport const GET_CHARGE_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/charge/${id}`\r\n\r\n// promo url\r\nexport const GET_PROMO = 'https://be-dev.beliayam.com/api/v1/admin/promo'\r\nexport const GET_PROMO_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/promo/${id}`\r\nexport const GET_PROMO_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/promo/${slug}`\r\n\r\n// Voucher\r\nexport const GET_VOUCHER = 'https://be-dev.beliayam.com/api/v1/admin/voucher'\r\nexport const GET_VOUCHER_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/voucher/${id}`\r\nexport const GET_VOUCHER_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/voucher/${slug}`\r\n\r\n// order url\r\nexport const GET_ORDER = 'https://be-dev.beliayam.com/api/v1/admin/order'\r\nexport const GET_ORDER_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/order/${id}`\r\n","import axios from 'axios'\r\nimport { REFRESH_TOKEN } from './Url'\r\n\r\naxios.defaults.baseURL = 'https://be-dev.beliayam.com/'\r\naxios.defaults.headers.common['Authorization'] = 'Bearer token'\r\nconst axiosApiInstance = axios.create()\r\n\r\nconst getToken = (accessToken) => {\r\n    return localStorage.getItem(accessToken)\r\n}\r\n\r\nconst axiosInterceptor = () => {\r\n    axiosApiInstance.interceptors.request.use(async (config) => {\r\n        if (!config.headers.Authorization) {\r\n            const plainToken = getToken()\r\n            const token = plainToken\r\n            if (token) {\r\n                config.headers.Authorization = `Bearer ${getToken()}`\r\n            }\r\n        }\r\n        return config\r\n    })\r\n}\r\n\r\nconst axiosInterceptorResponse = async () => {\r\n    axios.interceptors.response.use(\r\n        response => {\r\n            return response\r\n        },\r\n        error => {\r\n            if (error.response.status !== 401) {\r\n                return Promise.reject(error)\r\n            }\r\n            const tokens = {\r\n                accessToken: localStorage.getItem('accessToken'),\r\n                refreshToken: localStorage.getItem('refreshToken')\r\n            }\r\n\r\n            return axios\r\n                .post(REFRESH_TOKEN, tokens)\r\n                .then(response => {\r\n                    localStorage.setItem('accessToken', response.data.token.accessToken)\r\n                    localStorage.setItem('refreshToken', response.data.token.refreshToken)\r\n\r\n                    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.token.accessToken}`\r\n\r\n                    error.hasRefreshedToken = true\r\n                    return Promise.reject(tokenError)\r\n                }).catch(() => {\r\n                    const tokenError = new Error(\"Cannot refresh token\")\r\n                    tokenError.originalError = error\r\n                    return Promise.reject(tokenError)\r\n                })\r\n        }\r\n\r\n\r\n    )\r\n}\r\n\r\nfunction axiosWithTokenRefresh(config) {\r\n    return axios(config).catch(error => {\r\n        return error.hasRefreshedToken ? axios(config) : Promise.reject(error)\r\n    })\r\n}\r\n\r\n\r\nexport const fetcher = async (url, config) => {\r\n    //   const { getLocalStorage } = localStorageHooks()\r\n    //   const roleId = getLocalStorage(LOCALSTORAGE_KEY.ROLE_ID)\r\n\r\n    const header = {\r\n        ...config,\r\n        url,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            ...config?.headers\r\n        }\r\n    }\r\n\r\n    try {\r\n        axiosInterceptor()\r\n        // axiosWithTokenRefresh()\r\n        const res = await axios.request(header)\r\n\r\n        if (res) {\r\n            // axiosInterceptorResponse()\r\n            return res\r\n        }\r\n    } catch (err) {\r\n        throw err?.response\r\n    }\r\n}\r\n","import { Fragment } from \"react\";\r\nimport Avatar from '@components/avatar'\r\n\r\nconst ToastUpdate = ({icon, content}) => (\r\n   <Fragment>\r\n      <div className='toastify-header'>\r\n         <div className='title-wrapper'>\r\n            <Avatar size='sm' color='success' icon={icon} />\r\n            <h6 className='toast-title font-weight-bold'>Update Berhasil</h6>\r\n         </div>\r\n      </div>\r\n      <div className='toastify-body'>\r\n         <span>{content} telah berhasil diupdate, silahkan cek kembali!</span>\r\n      </div>\r\n   </Fragment>\r\n)\r\n\r\nexport default ToastUpdate","import { fetcher } from '@src/utility/axiosHooks'\r\nimport { GET_PROMO, GET_PROMO_BYID } from '@src/utility/Url'\r\n\r\n// get ALL promo list\r\nexport const getAllDataPromo = () => {\r\n    return async dispatch => {\r\n        await fetcher(GET_ALL_DATA_PROMO).then(response => {\r\n            console.log('ini all data', response)\r\n            dispatch({\r\n                type: 'GET_ALL_DATA_PROMO',\r\n                data: response?.data?.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n// get promo - pagination\r\nexport const getPromo = (params) => {\r\n    return async dispatch => {\r\n        await fetcher(GET_PROMO, {params}).then(response => {\r\n            dispatch({\r\n                type: 'GET_DATA_PROMO',\r\n                data: response?.data?.data,\r\n                totalPages: response.data.total,\r\n                params\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n// get product by id\r\nexport const getPromoById = id => {\r\n    return dispatch => {\r\n        fetcher(GET_PROMO_BYID(id))\r\n            .then(response => {\r\n                dispatch({\r\n                    type: 'GET_PROMO_BYID',\r\n                    selectedPromo: response?.data?.data\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n}\r\n\r\nexport const addPromo = promo => {\r\n    return async (dispatch, getState) => {\r\n        const req = { method: 'POST', data: promo }\r\n        await fetcher(GET_PROMO, req)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: 'ADD_PROMO',\r\n                    promo\r\n                })\r\n            })\r\n            .then(() => {\r\n                dispatch(getPromo(getState().promos?.params))\r\n                dispatch(getAllDataPromo())\r\n            })\r\n    }\r\n}\r\n\r\nexport const deletePromo = id => {\r\n    return async (dispatch, getState) => {\r\n        await fetcher(GET_PROMO_BYID(id), {\r\n            method: 'DELETE'\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: 'DELETE_PROMO'\r\n                })\r\n            })\r\n            .then(() => {\r\n                dispatch(getPromo(getState().promo?.params))\r\n                dispatch(getAllDataPromo())\r\n            })\r\n    }\r\n}\r\n\r\nexport const updatePromo = (id, promo) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const { \r\n                name, \r\n                slug, \r\n                tags, \r\n                products, \r\n                termsAndConditions, \r\n                promoValue,\r\n                promoBy,\r\n                promoStart,\r\n                promoEnd,\r\n                isActive,\r\n                description,\r\n                platform,\r\n                image_promo\r\n            } = promo\r\n            const formData = new FormData()\r\n            // formData.append(\"image_promo\", image_promo[0])\r\n            formData.set('name', name) \r\n            formData.set('slug', slug) \r\n            formData.set('tags', tags) \r\n            formData.set('products', products) \r\n            formData.set('termsAndConditions', termsAndConditions) \r\n            formData.set('promoValue', promoValue)\r\n            formData.set('promoBy', promoBy)\r\n            formData.set('promoStart', promoStart)\r\n            formData.set('promoEnd', promoEnd)\r\n            formData.set('isActive', isActive)\r\n            formData.set('description', description)\r\n            formData.set('platform', platform)\r\n            // formData.set('image_promo', image_promo) \r\n\r\n            const req = {\r\n                method: 'PUT',\r\n                data: formData,\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            }\r\n            await fetcher(GET_PROMO_BYID(id), req).then(res => {\r\n                if (res) {\r\n                    dispatch({\r\n                        type: 'UPDATE_PROMO',\r\n                        data: res?.data.data\r\n                    })\r\n                }\r\n            }).then(() => {\r\n                dispatch(getPromo(getState().promos?.params))\r\n                dispatch(getAllDataPromo())\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}"],"sourceRoot":""}