{"version":3,"sources":["views/pages/authentication/Login.js","utility/Url.js","utility/axiosHooks.js","@core/components/input-password-toggle/index.js"],"names":["ToastContent","name","role","className","size","color","icon","Login","props","useSkin","skin","ability","useContext","AbilityContext","dispatch","useDispatch","history","useHistory","useState","email","setEmail","password","setPassword","useForm","register","errors","handleSubmit","illustration","source","require","default","onSubmit","a","isObjEmpty","request","method","data","fetcher","LOGIN_URL","res","admin","token","id","_id","username","roleName","action","subject","accessToken","refreshToken","handleLogin","update","push","getHomeRouteForLoggedInUser","toast","success","fullName","transition","Slide","hideProgressBar","autoClose","console","log","to","onClick","e","preventDefault","src","logo","height","alt","lg","sm","md","tag","for","autoFocus","type","value","placeholder","onChange","target","classnames","innerRef","required","validate","label","Ripple","block","REFRESH_TOKEN","GET_ALL_DATA_USER","GET_USER_BYID","GET_USER_BYACTIVE","active","GET_CATEGORY","GET_CATEGORY_BYID","GET_PRODUCT","GET_PRODUCT_BYID","GET_CHARGE","GET_CHARGE_BYID","GET_PROMO","GET_PROMO_BYID","GET_VOUCHER","GET_VOUCHER_BYID","GET_ORDER","GET_ORDER_BYID","POST_FORCE_COMPLETE_ORDER","POST_CANCEL_ORDER","GET_USER_FOR_DSB","ORDER_BY_PAYMENT_METHOD","TOTAL_REVENUE","TOTAL_ORDERS","TOTAL_PRODUCTS","TOTAL_USERS","axiosApiInstance","axios","create","baseURL","headers","Authorization","getToken","localStorage","getItem","axiosInterceptorResponse","interceptors","response","use","error","Promise","reject","tokens","post","setItem","defaults","common","hasRefreshedToken","tokenError","Error","originalError","url","config","header","InputPasswordToggle","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","addonType","renderIcon","defaultProps"],"mappings":"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","file":"static/js/170.e850aba7.chunk.js","sourcesContent":["import { useState, useContext, Fragment } from 'react'\r\nimport { LOGIN_URL } from '@src/utility/Url'\r\nimport { fetcher } from '@src/utility/axiosHooks'\r\nimport classnames from 'classnames'\r\nimport Avatar from '@components/avatar'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useForm } from 'react-hook-form'\r\nimport { toast, Slide } from 'react-toastify'\r\nimport { handleLogin } from '@store/actions/auth'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\r\nimport logo from '@src/assets/images/logo/Logo.png'\r\nimport { Coffee } from 'react-feather'\r\nimport {\r\n  Alert,\r\n  Row,\r\n  Col,\r\n  CardTitle,\r\n  CardText,\r\n  Form,\r\n  Input,\r\n  FormGroup,\r\n  Label,\r\n  CustomInput,\r\n  Button,\r\n  UncontrolledTooltip\r\n} from 'reactstrap'\r\n\r\nimport '@styles/base/pages/page-auth.scss'\r\n\r\nconst ToastContent = ({ name, role }) => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\r\n        <h6 className='toast-title font-weight-bold'>Selamat Datang, {name}</h6>\r\n      </div>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>Anda berhasil login sebagai {role}. Sekarang anda bisa mulai bekerja. Enjoy!</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst Login = props => {\r\n  const [skin, setSkin] = useSkin()\r\n  const ability = useContext(AbilityContext)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const [email, setEmail] = useState('beliayamcom@gmail.com')\r\n  const [password, setPassword] = useState('bac.beliayamcom')\r\n\r\n  const { register, errors, handleSubmit } = useForm()\r\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n\r\n  const onSubmit = async () => {\r\n    if (isObjEmpty(errors)) {\r\n      const request = {\r\n        method: 'POST',\r\n        data: {\r\n          email,\r\n          password\r\n        }\r\n      }\r\n      try {\r\n        const res = await fetcher(LOGIN_URL, request)\r\n        const { admin, token } = res.data.data\r\n        const data = {\r\n          id: admin._id,\r\n          name: admin.name,\r\n          username: admin.username,\r\n          email: admin.email,\r\n          role: admin.role.roleName,\r\n          ability: [\r\n            {\r\n              action: 'manage',\r\n              subject: 'all'\r\n            }\r\n          ],\r\n          accessToken: token.accessToken,\r\n          refreshToken: token.refreshToken\r\n\r\n        }\r\n        dispatch(handleLogin(data))\r\n        ability.update(data.ability)\r\n        history.push(getHomeRouteForLoggedInUser(admin.role.roleName))\r\n        toast.success(\r\n          <ToastContent name={data.fullName || data.username} role={data.role} />,\r\n          { transition: Slide, hideProgressBar: true, autoClose: 8000 }\r\n        )\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-v2'>\r\n      <Row className='auth-inner m-0'>\r\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n          <img src={logo} height='40' alt=\"\" />\r\n          <h1 className='brand-text text-primary ml-1'>Beliayam.com</h1>\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login V2' />\r\n          </div>\r\n        </Col>\r\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n            <CardTitle tag='h2' className='font-weight-bold mb-1'>\r\n              Selamat Datang di Dashboard! 👋\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Silahkan Login dengan mengisi data dibawah</CardText>\r\n            <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n              <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                  Email\r\n                </Label>\r\n                <Input\r\n                  autoFocus\r\n                  type='email'\r\n                  value={email}\r\n                  id='login-email'\r\n                  name='login-email'\r\n                  placeholder='john@example.com'\r\n                  onChange={e => setEmail(e.target.value)}\r\n                  className={classnames({ 'is-invalid': errors['login-email'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <div className='d-flex justify-content-between'>\r\n                  <Label className='form-label' for='login-password'>\r\n                    Password\r\n                  </Label>\r\n                  {/* <Link to='/forgot-password'>\r\n                    <small>Lupa Password?</small>\r\n                  </Link> */}\r\n                </div>\r\n                <InputPasswordToggle\r\n                  value={password}\r\n                  id='login-password'\r\n                  name='login-password'\r\n                  className='input-group-merge'\r\n                  onChange={e => setPassword(e.target.value)}\r\n                  className={classnames({ 'is-invalid': errors['login-password'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <CustomInput type='checkbox' className='custom-control-Primary' id='remember-me' label='Ingat saya' />\r\n              </FormGroup>\r\n              <Button.Ripple type='submit' color='primary' block>\r\n                Sign in\r\n              </Button.Ripple>\r\n            </Form>\r\n            {/* <p className='text-center mt-2'>\r\n              <span className='mr-25'>Belum punya akun?</span>\r\n              <Link to='/misc/not-authorized'>\r\n                <span>Buat baru</span>\r\n              </Link>\r\n            </p> */}\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","const PRODUCTION_URL = 'https://be-beliayam.com/'\r\nconst DEVELOP_URL = 'https://be-dev-beliayam.com/'\r\n// auth url\r\nexport const REFRESH_TOKEN = `https://be-dev.beliayam.com/api/v1/admin/auth/refresh-token`\r\nexport const LOGIN_URL = 'https://be-dev.beliayam.com/api/v1/admin/auth/login'\r\n\r\n// user url\r\nexport const GET_ALL_DATA_USER = 'https://be-dev.beliayam.com/api/v1/admin/users'\r\nexport const GET_USER_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/users/${id}`\r\nexport const GET_USER_BYACTIVE = (id, active) => `https://be-dev.beliayam.com/api/v1/admin/users/${id}/${active}`\r\n\r\n// category url\r\nexport const GET_CATEGORY = 'https://be-dev.beliayam.com/api/v1/admin/category'\r\nexport const GET_CATEGORY_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/category/${id}`\r\nexport const GET_CATEGORY_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/category/${slug}`\r\n\r\n// product url\r\nexport const GET_PRODUCT = 'https://be-dev.beliayam.com/api/v1/admin/product'\r\nexport const GET_PRODUCT_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/product/${id}`\r\nexport const GET_PRODUCT_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/product/${slug}`\r\n\r\n// charge url\r\nexport const GET_CHARGE = 'https://be-dev.beliayam.com/api/v1/admin/charge'\r\nexport const GET_CHARGE_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/charge/${id}`\r\n\r\n// promo url\r\nexport const GET_PROMO = 'https://be-dev.beliayam.com/api/v1/admin/promo'\r\nexport const GET_PROMO_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/promo/${id}`\r\nexport const GET_PROMO_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/promo/${slug}`\r\n\r\n// Voucher\r\nexport const GET_VOUCHER = 'https://be-dev.beliayam.com/api/v1/admin/voucher'\r\nexport const GET_VOUCHER_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/voucher/${id}`\r\nexport const GET_VOUCHER_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/voucher/${slug}`\r\n\r\n// order url\r\nexport const GET_ORDER = 'https://be-dev.beliayam.com/api/v1/admin/order'\r\nexport const GET_ORDER_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/order/${id}`\r\nexport const POST_FORCE_COMPLETE_ORDER = (id) => `https://be-dev.beliayam.com/api/v1/admin/order/${id}/complete-order`\r\nexport const POST_CANCEL_ORDER = (id) => `https://be-dev.beliayam.com/api/v1/admin/order/${id}/cancel-order`\r\n\r\n// dashboard\r\nexport const GET_USER_FOR_DSB = 'https://be-dev.beliayam.com/api/v1/admin/users/time-range/client'\r\nexport const GET_ORDER_FOR_DSB = 'https://be-dev.beliayam.com/api/v1/admin/users/time-range/client'\r\n\r\n// charts\r\nexport const ORDER_BY_PAYMENT_METHOD = `https://be-dev.beliayam.com/api/v1/admin/order/by-payment-method`\r\n\r\n// Statistic\r\nexport const TOTAL_REVENUE = `https://be-dev.beliayam.com/api/v1/admin/sales/revenue`\r\nexport const TOTAL_ORDERS = `https://be-dev.beliayam.com/api/v1/admin/sales/total`\r\nexport const TOTAL_PRODUCTS = `https://be-dev.beliayam.com/api/v1/admin/product/total`\r\nexport const TOTAL_USERS = `https://be-dev.beliayam.com/api/v1/admin/users/total`\r\n","import axios from 'axios'\r\nimport { REFRESH_TOKEN } from './Url'\r\n\r\nconst axiosApiInstance = axios.create({\r\n    baseURL: 'https://be.beliayam.com/',\r\n    headers: {\r\n        Authorization: 'Bearer token'\r\n    }\r\n})\r\n\r\nconst getToken = (accessToken) => {\r\n    return localStorage.getItem(accessToken)\r\n}\r\n\r\nconst axiosInterceptor = () => {\r\n    axiosApiInstance.interceptors.request.use(async (config) => {\r\n        if (!config.headers.Authorization) {\r\n            const plainToken = getToken()\r\n            const token = plainToken\r\n            if (token) {\r\n                config.headers.Authorization = `Bearer ${getToken()}`\r\n            }\r\n        }\r\n        return config\r\n    })\r\n}\r\n\r\nconst axiosInterceptorResponse = async () => {\r\n    axios.interceptors.response.use(\r\n        response => {\r\n            return response\r\n        },\r\n        async error => {\r\n            if (error.response !== 401) {\r\n                return Promise.reject(error)\r\n            }\r\n            const tokens = {\r\n                accessToken: localStorage.getItem('accessToken'),\r\n                refreshToken: localStorage.getItem('refreshToken')\r\n            }\r\n\r\n            try {\r\n                const response = await axios.post(REFRESH_TOKEN, {\r\n                    'Content-Type': 'application/json'\r\n                }, tokens)\r\n                localStorage.setItem('accessToken', response.data.token.accessToken)\r\n                localStorage.setItem('refreshToken', response.data.token.refreshToken)\r\n\r\n                axios.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.token.accessToken}`\r\n\r\n                error.hasRefreshedToken = true\r\n                return await Promise.reject(tokenError)\r\n            } catch {\r\n                const tokenError = new Error(\"Cannot refresh token\")\r\n                tokenError.originalError = error\r\n                return await Promise.reject(tokenError)\r\n            }\r\n        }\r\n\r\n\r\n    )\r\n}\r\n\r\n// async function axiosWithTokenRefresh(config) {\r\n//     try {\r\n//         return await axios(config)\r\n//     } catch (error) {\r\n//         return await (error.hasRefreshedToken ? axios(config) : Promise.reject(error))\r\n//     }\r\n// }\r\n\r\n\r\nexport const fetcher = async (url, config) => {\r\n    //   const { getLocalStorage } = localStorageHooks()\r\n    //   const roleId = getLocalStorage(LOCALSTORAGE_KEY.ROLE_ID)\r\n\r\n    const header = {\r\n        ...config,\r\n        url,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            ...config?.headers\r\n        }\r\n    }\r\n\r\n    try {\r\n        axiosInterceptor()\r\n        // axiosWithTokenRefresh()\r\n        axiosInterceptorResponse()\r\n        const res = await axios.request(header)\r\n\r\n        if (res) {\r\n            return res\r\n        }\r\n    } catch (err) {\r\n        throw err?.response\r\n    }\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = props => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Input\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : '············'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName, componentName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName, componentName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n"],"sourceRoot":""}