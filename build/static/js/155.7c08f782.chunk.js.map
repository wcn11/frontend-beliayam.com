{"version":3,"sources":["views/pages/authentication/Login.js","@core/components/input-password-toggle/index.js","utility/Url.js"],"names":["ToastContent","name","role","className","size","color","icon","Login","props","useSkin","skin","ability","useContext","AbilityContext","dispatch","useDispatch","history","useHistory","useState","email","setEmail","password","setPassword","useForm","register","errors","handleSubmit","illustration","source","require","default","to","onClick","e","preventDefault","src","Logo","alt","lg","sm","md","tag","onSubmit","data","isObjEmpty","axios","post","LOGIN_URL","then","res","admin","token","id","_id","username","roleName","action","subject","accessToken","refreshToken","handleLogin","update","push","getHomeRouteForLoggedInUser","toast","success","fullName","transition","Slide","hideProgressBar","autoClose","catch","err","console","log","for","autoFocus","type","value","placeholder","onChange","target","classnames","innerRef","required","validate","label","Ripple","block","InputPasswordToggle","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","addonType","renderIcon","defaultProps","GET_ALL_DATA_USER"],"mappings":"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","file":"static/js/155.7c08f782.chunk.js","sourcesContent":["import { useState, useContext, Fragment } from 'react'\nimport classnames from 'classnames'\nimport Avatar from '@components/avatar'\nimport { useSkin } from '@hooks/useSkin'\nimport axios from 'axios'\nimport { useDispatch } from 'react-redux'\nimport { useForm } from 'react-hook-form'\nimport { toast, Slide } from 'react-toastify'\nimport { handleLogin } from '@store/actions/auth'\nimport { AbilityContext } from '@src/utility/context/Can'\nimport { Link, useHistory } from 'react-router-dom'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\nimport Logo from '@src/assets/images/logo/logo.svg'\nimport { Coffee } from 'react-feather'\nimport {\n  Alert,\n  Row,\n  Col,\n  CardTitle,\n  CardText,\n  Form,\n  Input,\n  FormGroup,\n  Label,\n  CustomInput,\n  Button,\n  UncontrolledTooltip\n} from 'reactstrap'\n\nimport '@styles/base/pages/page-auth.scss'\nimport { LOGIN_URL } from '../../../utility/Url'\n\nconst ToastContent = ({ name, role }) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\n        <h6 className='toast-title font-weight-bold'>Selamat Datang, {name}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span>Anda berhasil login sebagai {role}. Sekarang anda bisa mulai bekerja. Enjoy!</span>\n    </div>\n  </Fragment>\n)\n\nconst Login = props => {\n  const [skin, setSkin] = useSkin()\n  const ability = useContext(AbilityContext)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [email, setEmail] = useState('beliayamcom@gmail.com')\n  const [password, setPassword] = useState('bac.beliayamcom')\n\n  const { register, errors, handleSubmit } = useForm()\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n  const onSubmit = data => {\n    if (isObjEmpty(errors)) {\n      axios.post(LOGIN_URL, {\n        email, password\n      })\n        .then(res => {\n          const { admin, token } = res.data.data\n          const data = {\n            id: admin._id,\n            name: admin.name,\n            username: admin.username,\n            email: admin.email,\n            role: admin.role.roleName,\n            ability: [\n              {\n                action: 'manage',\n                subject: 'all'\n              }\n            ],\n            accessToken: token.accessToken,\n            refreshToken: token.refreshToken\n\n          }\n          dispatch(handleLogin(data))\n          ability.update(data.ability)\n          history.push(getHomeRouteForLoggedInUser(admin.role.roleName))\n          toast.success(\n            <ToastContent name={data.fullName || data.username} role={data.role} />,\n            { transition: Slide, hideProgressBar: true, autoClose: 8000 }\n          )\n        })\n        .catch(err => console.log(err))\n    }\n  }\n\n  return (\n    <div className='auth-wrapper auth-v2'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n          <img src={Logo} alt=\"\" />\n          <h2 className='brand-text text-primary ml-1'>Beliayam.com</h2>\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login V2' />\n          </div>\n        </Col>\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n            <CardTitle tag='h2' className='font-weight-bold mb-1'>\n              Selamat Datang di Dashboard! ðŸ‘‹\n            </CardTitle>\n            <CardText className='mb-2'>Silahkan Login dengan mengisi data dibawah</CardText>\n            <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\n              <FormGroup>\n                <Label className='form-label' for='login-email'>\n                  Email\n                </Label>\n                <Input\n                  autoFocus\n                  type='email'\n                  value={email}\n                  id='login-email'\n                  name='login-email'\n                  placeholder='john@example.com'\n                  onChange={e => setEmail(e.target.value)}\n                  className={classnames({ 'is-invalid': errors['login-email'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <div className='d-flex justify-content-between'>\n                  <Label className='form-label' for='login-password'>\n                    Password\n                  </Label>\n                  <Link to='/forgot-password'>\n                    <small>Lupa Password?</small>\n                  </Link>\n                </div>\n                <InputPasswordToggle\n                  value={password}\n                  id='login-password'\n                  name='login-password'\n                  className='input-group-merge'\n                  onChange={e => setPassword(e.target.value)}\n                  className={classnames({ 'is-invalid': errors['login-password'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <CustomInput type='checkbox' className='custom-control-Primary' id='remember-me' label='Ingat saya' />\n              </FormGroup>\n              <Button.Ripple type='submit' color='primary' block>\n                Sign in\n              </Button.Ripple>\n            </Form>\n            <p className='text-center mt-2'>\n              <span className='mr-25'>Belum punya akun?</span>\n              <Link to='/misc/not-authorized'>\n                <span>Buat baru</span>\n              </Link>\n            </p>\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Login\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\n\nconst InputPasswordToggle = props => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\n      <InputGroup\n        className={classnames({\n          [className]: className\n        })}\n      >\n        <Input\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : 'Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName, componentName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName, componentName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","export const LOGIN_URL = 'https://be-dev.beliayam.com/api/v1/admin/auth/login'\nexport const GET_ALL_DATA_USER = 'https://be-dev.beliayam.com/api/v1/admin/users'\nexport const GET_USER_BYID = 'https://be-dev.beliayam.com/api/v1/admin/users/:id'\nexport const GET_CATEGORY = 'https://be-dev.beliayam.com/api/v1/admin/category'"],"sourceRoot":""}