{"version":3,"sources":["views/apps/invoice/store/actions/index.js","views/apps/invoice/list/columns.js","views/apps/invoice/list/index.js"],"names":["getData","params","dispatch","axios","get","then","response","type","allData","data","invoices","totalPages","total","invoiceStatusObj","Sent","color","icon","Send","Paid","CheckCircle","Draft","Save","Downloaded","ArrowDownCircle","Info","PieChart","renderClient","row","Math","floor","random","avatar","length","className","img","width","height","content","client","name","initials","columns","minWidth","selector","cell","to","id","size","sortable","invoiceStatus","Icon","Edit","UncontrolledTooltip","placement","target","balance","dueDate","email","companyEmail","Badge","pill","UncontrolledDropdown","DropdownToggle","tag","DropdownMenu","right","DropdownItem","href","onClick","e","preventDefault","Link","store","getStore","delete","invoice","CustomHeader","handleFilter","value","handleStatusValue","statusValue","handlePerPage","rowsPerPage","Row","Col","lg","Label","for","CustomInput","onChange","Button","Ripple","Input","placeholder","InvoiceList","useDispatch","useSelector","state","useState","setValue","currentPage","setCurrentPage","setStatusValue","setRowsPerPage","useEffect","page","perPage","status","q","Card","noHeader","pagination","paginationServer","subHeader","responsive","sortIcon","defaultSortField","paginationDefaultPage","paginationComponent","count","Number","toFixed","pageCount","nextLabel","breakLabel","previousLabel","activeClassName","breakClassName","breakLinkClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","slice","dataToRender","subHeaderComponent","val","parseInt"],"mappings":"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","file":"static/js/156.21a32f60.chunk.js","sourcesContent":["import axios from 'axios'\n\n// ** Get data\nexport const getData = params => {\n  return dispatch => {\n    axios.get('/apps/invoice/invoices', params).then(response => {\n      dispatch({\n        type: 'GET_DATA',\n        allData: response.data.allData,\n        data: response.data.invoices,\n        totalPages: response.data.total,\n        params\n      })\n    })\n  }\n}\n\n// ** Delete Invoice\nexport const deleteInvoice = id => {\n  return (dispatch, getStore) => {\n    axios\n      .delete('/apps/invoice/delete', { id })\n      .then(response => {\n        dispatch({\n          type: 'DELETE_INVOICE'\n        })\n      })\n      .then(() => dispatch(getData(getStore().invoice.params)))\n  }\n}\n","// ** React Imports\nimport { Fragment } from 'react'\n\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { deleteInvoice } from '../store/actions'\nimport { store } from '@store/storeConfig/store'\n\n// ** Third Party Components\nimport {\n  Badge,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  UncontrolledTooltip\n} from 'reactstrap'\nimport {\n  Eye,\n  TrendingUp,\n  Send,\n  MoreVertical,\n  Download,\n  Edit,\n  Trash,\n  Copy,\n  CheckCircle,\n  Save,\n  ArrowDownCircle,\n  Info,\n  PieChart\n} from 'react-feather'\n\n// ** Vars\nconst invoiceStatusObj = {\n  Sent: { color: 'light-secondary', icon: Send },\n  Paid: { color: 'light-success', icon: CheckCircle },\n  Draft: { color: 'light-primary', icon: Save },\n  Downloaded: { color: 'light-info', icon: ArrowDownCircle },\n  'Past Due': { color: 'light-danger', icon: Info },\n  'Partial Payment': { color: 'light-warning', icon: PieChart }\n}\n\n// ** renders client column\nconst renderClient = row => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n    color = states[stateNum]\n\n  if (row.avatar.length) {\n    return <Avatar className='mr-50' img={row.avatar} width='32' height='32' />\n  } else {\n    return <Avatar color={color} className='mr-50' content={row.client ? row.client.name : 'John Doe'} initials />\n  }\n}\n\n// ** Table columns\nexport const columns = [\n  {\n    name: '#',\n    minWidth: '107px',\n    selector: 'id',\n    cell: row => <Link to={`/apps/invoice/preview/${row.id}`}>{`#${row.id}`}</Link>\n  },\n  {\n    name: <TrendingUp size={14} />,\n    minWidth: '102px',\n    selector: 'invoiceStatus',\n    sortable: true,\n    cell: row => {\n      const color = invoiceStatusObj[row.invoiceStatus] ? invoiceStatusObj[row.invoiceStatus].color : 'primary',\n        Icon = invoiceStatusObj[row.invoiceStatus] ? invoiceStatusObj[row.invoiceStatus].icon : Edit\n      return (\n        <Fragment>\n          <Avatar color={color} icon={<Icon size={14} />} id={`av-tooltip-${row.id}`} />\n          <UncontrolledTooltip placement='top' target={`av-tooltip-${row.id}`}>\n            <span className='font-weight-bold'>{row.invoiceStatus}</span>\n            <br />\n            <span className='font-weight-bold'>Balance:</span> {row.balance}\n            <br />\n            <span className='font-weight-bold'>Due Date:</span> {row.dueDate}\n          </UncontrolledTooltip>\n        </Fragment>\n      )\n    }\n  },\n  {\n    name: 'Client',\n    minWidth: '350px',\n    selector: 'client',\n    sortable: true,\n    cell: row => {\n      const name = row.client ? row.client.name : 'John Doe',\n        email = row.client ? row.client.companyEmail : 'johnDoe@email.com'\n      return (\n        <div className='d-flex justify-content-left align-items-center'>\n          {renderClient(row)}\n          <div className='d-flex flex-column'>\n            <h6 className='user-name text-truncate mb-0'>{name}</h6>\n            <small className='text-truncate text-muted mb-0'>{email}</small>\n          </div>\n        </div>\n      )\n    }\n  },\n  {\n    name: 'Total',\n    selector: 'total',\n    sortable: true,\n    minWidth: '150px',\n    cell: row => <span>${row.total || 0}</span>\n  },\n  {\n    name: 'Issued Date',\n    selector: 'dueDate',\n    sortable: true,\n    minWidth: '200px',\n    cell: row => row.dueDate\n  },\n  {\n    name: 'Balance',\n    selector: 'balance',\n    sortable: true,\n    minWidth: '164px',\n    cell: row => {\n      return row.balance !== 0 ? (\n        <span>{row.balance}</span>\n      ) : (\n        <Badge color='light-success' pill>\n          Paid\n        </Badge>\n      )\n    }\n  },\n  {\n    name: 'Action',\n    minWidth: '110px',\n    selector: '',\n    sortable: true,\n    cell: row => (\n      <div className='column-action d-flex align-items-center'>\n        <Send size={17} id={`send-tooltip-${row.id}`} />\n        <UncontrolledTooltip placement='top' target={`send-tooltip-${row.id}`}>\n          Send Mail\n        </UncontrolledTooltip>\n        <Link to={`/apps/invoice/preview/${row.id}`} id={`pw-tooltip-${row.id}`}>\n          <Eye size={17} className='mx-1' />\n        </Link>\n        <UncontrolledTooltip placement='top' target={`pw-tooltip-${row.id}`}>\n          Preview Invoice\n        </UncontrolledTooltip>\n        <UncontrolledDropdown>\n          <DropdownToggle tag='span'>\n            <MoreVertical size={17} className='cursor-pointer' />\n          </DropdownToggle>\n          <DropdownMenu right>\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\n              <Download size={14} className='mr-50' />\n              <span className='align-middle'>Download</span>\n            </DropdownItem>\n            <DropdownItem tag={Link} to={`/apps/invoice/edit/${row.id}`} className='w-100'>\n              <Edit size={14} className='mr-50' />\n              <span className='align-middle'>Edit</span>\n            </DropdownItem>\n            <DropdownItem\n              tag='a'\n              href='/'\n              className='w-100'\n              onClick={e => {\n                e.preventDefault()\n                store.dispatch(deleteInvoice(row.id))\n              }}\n            >\n              <Trash size={14} className='mr-50' />\n              <span className='align-middle'>Delete</span>\n            </DropdownItem>\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\n              <Copy size={14} className='mr-50' />\n              <span className='align-middle'>Duplicate</span>\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </div>\n    )\n  }\n]\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { Button, Label, Input, CustomInput, Row, Col, Card } from 'reactstrap'\n\n// ** Store & Actions\nimport { getData } from '../store/actions'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Styles\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nconst CustomHeader = ({ handleFilter, value, handleStatusValue, statusValue, handlePerPage, rowsPerPage }) => {\n  return (\n    <div className='invoice-list-table-header w-100 py-2'>\n      <Row>\n        <Col lg='6' className='d-flex align-items-center px-0 px-lg-1'>\n          <div className='d-flex align-items-center mr-2'>\n            <Label for='rows-per-page'>Show</Label>\n            <CustomInput\n              className='form-control ml-50 pr-3'\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              onChange={handlePerPage}\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </CustomInput>\n          </div>\n          <Button.Ripple tag={Link} to='/apps/invoice/add' color='primary'>\n            Add Record\n          </Button.Ripple>\n        </Col>\n        <Col\n          lg='6'\n          className='actions-right d-flex align-items-center justify-content-lg-end flex-lg-nowrap flex-wrap mt-lg-0 mt-1 pr-lg-1 p-0'\n        >\n          <div className='d-flex align-items-center'>\n            <Label for='search-invoice'>Search</Label>\n            <Input\n              id='search-invoice'\n              className='ml-50 mr-2 w-100'\n              type='text'\n              value={value}\n              onChange={e => handleFilter(e.target.value)}\n              placeholder='Search Invoice'\n            />\n          </div>\n          <Input className='w-auto ' type='select' value={statusValue} onChange={handleStatusValue}>\n            <option value=''>Select Status</option>\n            <option value='downloaded'>Downloaded</option>\n            <option value='draft'>Draft</option>\n            <option value='paid'>Paid</option>\n            <option value='partial payment'>Partial Payment</option>\n            <option value='past due'>Past Due</option>\n            <option value='partial payment'>Partial Payment</option>\n          </Input>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst InvoiceList = () => {\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.invoice)\n\n  const [value, setValue] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [statusValue, setStatusValue] = useState('')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  useEffect(() => {\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue,\n        q: value\n      })\n    )\n  }, [dispatch, store.data.length])\n\n  const handleFilter = val => {\n    setValue(val)\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue,\n        q: val\n      })\n    )\n  }\n\n  const handlePerPage = e => {\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: parseInt(e.target.value),\n        status: statusValue,\n        q: value\n      })\n    )\n    setRowsPerPage(parseInt(e.target.value))\n  }\n\n  const handleStatusValue = e => {\n    setStatusValue(e.target.value)\n    dispatch(\n      getData({\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: e.target.value,\n        q: value\n      })\n    )\n  }\n\n  const handlePagination = page => {\n    dispatch(\n      getData({\n        page: page.selected + 1,\n        perPage: rowsPerPage,\n        status: statusValue,\n        q: value\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  const CustomPagination = () => {\n    const count = Number((store.total / rowsPerPage).toFixed(0))\n\n    return (\n      <ReactPaginate\n        pageCount={count || 1}\n        nextLabel=''\n        breakLabel='...'\n        previousLabel=''\n        activeClassName='active'\n        breakClassName='page-item'\n        breakLinkClassName='page-link'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end p-1'}\n      />\n    )\n  }\n\n  const dataToRender = () => {\n    const filters = {\n      status: statusValue,\n      q: value\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  return (\n    <div className='invoice-list-wrapper'>\n      <Card>\n        <div className='invoice-list-dataTable'>\n          <DataTable\n            noHeader\n            pagination\n            paginationServer\n            subHeader={true}\n            columns={columns}\n            responsive={true}\n            sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            defaultSortField='invoiceId'\n            paginationDefaultPage={currentPage}\n            paginationComponent={CustomPagination}\n            data={dataToRender()}\n            subHeaderComponent={\n              <CustomHeader\n                value={value}\n                statusValue={statusValue}\n                rowsPerPage={rowsPerPage}\n                handleFilter={handleFilter}\n                handlePerPage={handlePerPage}\n                handleStatusValue={handleStatusValue}\n              />\n            }\n          />\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default InvoiceList\n"],"sourceRoot":""}