{"version":3,"sources":["../../src/FileSaver.js","views/extensions/import-export/Export.js","@core/components/extensions-header/index.js"],"names":["b","a","autoBom","console","warn","test","type","Blob","c","d","e","XMLHttpRequest","open","responseType","onload","response","onerror","error","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","saveAs","HTMLAnchorElement","prototype","g","h","i","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","navigator","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","userAgent","FileReader","onloadend","result","replace","readAsDataURL","k","l","module","exports","initialData","id","username","email","website","Export","tableRef","useRef","useState","data","filteredData","setFilteredData","value","setValue","modal","setModal","fileName","setFileName","fileFormat","setFileFormat","toggleModal","renderTableData","map","col","subTitle","link","className","sm","Ripple","color","onClick","for","bsSize","onChange","dataArr","length","filter","startsWithCondition","toLowerCase","startsWith","toString","includesCondition","includes","handleFilter","innerRef","responsive","isOpen","toggle","onClosed","placeholder","bookType","wb","XLSX","utils","table_to_book","current","sheet","wbout","write","bookSST","file","FileSaver","s","buf","ArrayBuffer","view","Uint8Array","charCodeAt","s2ab","handleExport","ExtensionsHeader","props"],"mappings":"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","file":"static/js/144.91825ada.chunk.js","sourcesContent":["/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile)\n  : 'download' in HTMLAnchorElement.prototype\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari)) && typeof FileReader === 'object') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import { Fragment, useState, useRef } from 'react'\r\nimport ExtensionsHeader from '@components/extensions-header'\r\nimport XLSX from 'xlsx'\r\nimport * as FileSaver from 'file-saver'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  FormGroup,\r\n  CustomInput,\r\n  Label\r\n} from 'reactstrap'\r\n\r\nconst initialData = [\r\n  {\r\n    id: 1,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz',\r\n    website: 'hildegard.org'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv',\r\n    website: 'anastasia.net'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net',\r\n    website: 'ramiro.info'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org',\r\n    website: 'kale.biz'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca',\r\n    website: 'demarco.info'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info',\r\n    website: 'ola.org'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz',\r\n    website: 'elvis.io'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me',\r\n    website: 'jacynthe.com'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io',\r\n    website: 'conrad.com'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz',\r\n    website: 'ambrose.net'\r\n  }\r\n]\r\n\r\nconst Export = () => {\r\n  const tableRef = useRef()\r\n\r\n  const [data] = useState(initialData)\r\n  const [filteredData, setFilteredData] = useState([])\r\n  const [value, setValue] = useState('')\r\n  const [modal, setModal] = useState(false)\r\n  const [fileName, setFileName] = useState('')\r\n  const [fileFormat, setFileFormat] = useState('xlsx')\r\n\r\n  const toggleModal = () => {\r\n    setModal(!modal)\r\n  }\r\n\r\n  const handleFilter = e => {\r\n    const dataArr = data\r\n    let filteredData = []\r\n    const value = e.target.value\r\n    setValue(value)\r\n    if (value.length) {\r\n      filteredData = dataArr.filter(col => {\r\n        const startsWithCondition =\r\n          col.name.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          col.email.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          col.website.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          col.id.toString().toLowerCase().startsWith(value.toLowerCase())\r\n\r\n        const includesCondition =\r\n          col.name.toLowerCase().includes(value.toLowerCase()) ||\r\n          col.email.toLowerCase().includes(value.toLowerCase()) ||\r\n          col.website.toLowerCase().includes(value.toLowerCase()) ||\r\n          col.id.toString().toLowerCase().includes(value.toLowerCase())\r\n\r\n        if (startsWithCondition) return startsWithCondition\r\n        else if (!startsWithCondition && includesCondition) return includesCondition\r\n        else return null\r\n      })\r\n      setFilteredData(filteredData)\r\n      setValue(value)\r\n    }\r\n  }\r\n\r\n  const handleExport = () => {\r\n    toggleModal()\r\n    const bookType = fileFormat\r\n    const wb = XLSX.utils.table_to_book(tableRef.current, { sheet: 'Sheet JS' })\r\n    const wbout = XLSX.write(wb, { bookType, bookSST: true, type: 'binary' })\r\n\r\n    const s2ab = s => {\r\n      const buf = new ArrayBuffer(s.length)\r\n      const view = new Uint8Array(buf)\r\n      for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xff\r\n      return buf\r\n    }\r\n    const file = fileName.length ? `${fileName}.${fileFormat}` : `excel-sheet.${fileFormat}`\r\n\r\n    return FileSaver.saveAs(new Blob([s2ab(wbout)], { type: 'application/octet-stream' }), file)\r\n  }\r\n\r\n  const array = value ? filteredData : data\r\n  const renderTableData = array.map(col => {\r\n    return (\r\n      <tr key={col.id}>\r\n        <td>{col.email}</td>\r\n        <td>{col.name}</td>\r\n        <td>{col.website}</td>\r\n        <td>{col.id}</td>\r\n      </tr>\r\n    )\r\n  })\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader\r\n        title='XLSX'\r\n        subTitle='Xlsx is a parser and writer for various spreadsheet formats'\r\n        link='https://github.com/AdeleD/react-paginate'\r\n      />\r\n      <Row className='export-component'>\r\n        <Col sm='12'>\r\n          <Card>\r\n            <CardBody className='pb-0'>\r\n              <div className='d-flex justify-content-between flex-wrap flex-sm-row flex-column'>\r\n                <Button.Ripple color='primary' onClick={() => toggleModal()}>\r\n                  Export\r\n                </Button.Ripple>\r\n                <div className='d-flex align-items-center justify-content-end mt-sm-0 mt-1'>\r\n                  <Label for='search-input' className='mr-1'>\r\n                    Search\r\n                  </Label>\r\n                  <Input id='search-input' bsSize='sm' type='text' value={value} onChange={e => handleFilter(e)} />\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n            <Table innerRef={tableRef} className='table-hover-animation mt-2' responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>Email</th>\r\n                  <th>Name</th>\r\n                  <th>Website</th>\r\n                  <th>Rank</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{renderTableData}</tbody>\r\n            </Table>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={() => toggleModal()}\r\n        className='modal-dialog-centered'\r\n        onClosed={() => setFileName('')}\r\n      >\r\n        <ModalHeader toggle={() => toggleModal()}>Export To Excel</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Input\r\n              type='text'\r\n              value={fileName}\r\n              onChange={e => setFileName(e.target.value)}\r\n              placeholder='Enter File Name'\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <CustomInput\r\n              type='select'\r\n              id='selectFileFormat'\r\n              name='customSelect'\r\n              value={fileFormat}\r\n              onChange={e => setFileFormat(e.target.value)}\r\n            >\r\n              <option>xlsx</option>\r\n              <option>csv</option>\r\n              <option>txt</option>\r\n            </CustomInput>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color='primary' onClick={() => handleExport()}>\r\n            Export\r\n          </Button>\r\n          <Button color='flat-danger' onClick={() => toggleModal()}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Export\r\n","// ** React Imports\nimport Proptypes from 'prop-types'\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ml-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired,\n  link: Proptypes.string\n}\n"],"sourceRoot":""}