{"version":3,"sources":["views/apps/promo/edit/index.js","utility/Url.js","utility/axiosHooks.js","views/apps/promo/store/action/index.js"],"names":["PromoEdit","REFRESH_TOKEN","LOGIN_URL","GET_ALL_DATA_USER","GET_USER_BYID","id","GET_CATEGORY","GET_CATEGORY_BYID","GET_PRODUCT","GET_PRODUCT_BYID","GET_PROMO","GET_PROMO_BYID","axios","defaults","baseURL","headers","common","axiosApiInstance","create","getToken","accessToken","localStorage","getItem","fetcher","url","config","a","header","interceptors","request","use","Authorization","res","response","getAllDataPromo","dispatch","then","console","log","type","data","getPromo","params","get","totalPages","total","getPromoById","selectedPromo","catch","err","addPromo","promo","getState","req","method","promos","deletePromo","updatePromo","name","slug","tags","products","ermsAndConditions","promoValue","promoBy","promoStart","promoEnd","isActive","description","platform","image_promo","formData","FormData","set"],"mappings":"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","file":"static/js/139.43946e65.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// import SocialTab from './Social'\nimport AccountTab from './Account'\nimport InfoTab from './Information'\n\nimport { getPromoById } from '../store/action'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { Clipboard, Info, Share2 } from 'react-feather'\nimport { Card, CardBody, Row, Col, Nav, NavItem, NavLink, TabContent, TabPane, Alert } from 'reactstrap'\n\nimport '@styles/react/apps/app-users.scss'\n\nconst PromoEdit = () => {\n    // // ** States & Vars\n    // const [activeTab, setActiveTab] = useState('1'),\n    //     store = useSelector(state => state.categories),\n    //     dispatch = useDispatch(),\n    //     { id } = useParams()\n\n    // // ** Function to toggle tabs\n    // const toggle = tab => setActiveTab(tab)\n\n    // // ** Function to get user on mount\n    // useEffect(() => {\n    //     dispatch(getPromoById(id))\n    //     return () => dispatch(getPromoById(id))\n    // }, [dispatch, id])\n\n    // return store.selectedPromo !== null && store.selectedPromo !== undefined ? (\n    //     <Row className='app-user-edit'>\n    //         <Col sm='12'>\n    //             <Card>\n    //                 <CardBody className='pt-2'>\n    //                     <Nav pills>\n    //                         <NavItem>\n    //                             <NavLink active={activeTab === '1'} onClick={() => toggle('1')}>\n    //                                 <Clipboard size={14} />\n    //                                 <span className='align-middle d-none d-sm-block'>Promo</span>\n    //                             </NavLink>\n    //                         </NavItem>\n    //                         <NavItem>\n    //                             <NavLink active={activeTab === '2'} onClick={() => toggle('2')}>\n    //                                 <Info size={14} />\n    //                                 <span className='align-middle d-none d-sm-block'>Information</span>\n    //                             </NavLink>\n    //                         </NavItem>\n    //                     </Nav>\n    //                     <TabContent activeTab={activeTab}>\n    //                         <TabPane tabId='1'>\n    //                             <AccountTab selectedPromo={store.selectedPromo} />\n    //                         </TabPane>\n    //                         <TabPane tabId='2'>\n    //                             <InfoTab />\n    //                         </TabPane>\n    //                         {/* <TabPane tabId='3'>\n    //                             <SocialTab />\n    //                         </TabPane> */}\n    //                     </TabContent>\n    //                 </CardBody>\n    //             </Card>\n    //         </Col>\n    //     </Row>\n    // ) : (\n    //     <Alert color='danger'>\n    //         <h4 className='alert-heading'>Promo not found</h4>\n    //         <div className='alert-body'>\n    //             Promo with id: {id} doesn't exist. Check list of all Promos: <Link to='/apps/promo/list'>Promos List</Link>\n    //         </div>\n    //     </Alert>\n    // )\n    return <h1>Under contruction</h1>\n}\n\nexport default PromoEdit","// auth url\nexport const REFRESH_TOKEN = 'https://be-dev.beliayam.com/api/v1/admin/auth/refresh-token'\nexport const LOGIN_URL = 'https://be-dev.beliayam.com/api/v1/admin/auth/login'\n\n// user url\nexport const GET_ALL_DATA_USER = 'https://be-dev.beliayam.com/api/v1/admin/users'\nexport const GET_USER_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/users/${id}`\n\n// category url\nexport const GET_CATEGORY = 'https://be-dev.beliayam.com/api/v1/admin/category'\nexport const GET_CATEGORY_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/category/${id}`\nexport const GET_CATEGORY_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/category/${slug}`\n\n// product url\nexport const GET_PRODUCT = 'https://be-dev.beliayam.com/api/v1/admin/product'\nexport const GET_PRODUCT_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/product/${id}`\nexport const GET_PRODUCT_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/product/${slug}`\n\n// promo url\nexport const GET_PROMO = 'https://be-dev.beliayam.com/api/v1/admin/promo'\nexport const GET_PROMO_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/promo/${id}`\nexport const GET_PROMO_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/promo/${slug}`","import axios from 'axios'\nimport { REFRESH_TOKEN } from './Url'\n\naxios.defaults.baseURL = 'https://be-dev.beliayam.com/'\naxios.defaults.headers.common['Authorization'] = 'Bearer token'\nconst axiosApiInstance = axios.create()\n\nconst getToken = (accessToken) => {\n    return localStorage.getItem(accessToken)\n}\n\nconst axiosInterceptor = () => {\n    axiosApiInstance.interceptors.request.use(async (config) => {\n        if (!config.headers.Authorization) {\n            const plainToken = getToken()\n            const token = plainToken\n            if (token) {\n                config.headers.Authorization = `Bearer ${getToken()}`\n            }\n        }\n        return config\n    })\n}\n\nconst axiosInterceptorResponse = async () => {\n    axios.interceptors.response.use(\n        response => {\n            return response\n        },\n        error => {\n            if (error.response.status !== 401) {\n                return Promise.reject(error)\n            }\n            const tokens = {\n                accessToken: localStorage.getItem('accessToken'),\n                refreshToken: localStorage.getItem('refreshToken')\n            }\n\n            return axios\n                .post(REFRESH_TOKEN, tokens)\n                .then(response => {\n                    localStorage.setItem('accessToken', response.data.token.accessToken)\n                    localStorage.setItem('refreshToken', response.data.token.refreshToken)\n\n                    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.token.accessToken}`\n\n                    error.hasRefreshedToken = true\n                    return Promise.reject(tokenError)\n                }).catch(() => {\n                    const tokenError = new Error(\"Cannot refresh token\")\n                    tokenError.originalError = error\n                    return Promise.reject(tokenError)\n                })\n        }\n\n\n    )\n}\n\nfunction axiosWithTokenRefresh(config) {\n    return axios(config).catch(error => {\n        return error.hasRefreshedToken ? axios(config) : Promise.reject(error)\n    })\n}\n\n\nexport const fetcher = async (url, config) => {\n    //   const { getLocalStorage } = localStorageHooks()\n    //   const roleId = getLocalStorage(LOCALSTORAGE_KEY.ROLE_ID)\n\n    const header = {\n        ...config,\n        url,\n        headers: {\n            'Content-Type': 'application/json',\n            ...config?.headers\n        }\n    }\n\n    try {\n        axiosInterceptor()\n        // axiosWithTokenRefresh()\n        const res = await axios.request(header)\n\n        if (res) {\n            // axiosInterceptorResponse()\n            return res\n        }\n    } catch (err) {\n        throw err?.response\n    }\n}\n","import axios from \"axios\"\nimport { fetcher } from '@src/utility/axiosHooks'\nimport { GET_PROMO, GET_PROMO_BYID } from '@src/utility/Url'\n\n// get ALL promo list\nexport const getAllDataPromo = () => {\n    return async dispatch => {\n        await fetcher(GET_PROMO).then(response => {\n            console.log('ini all data', response)\n            dispatch({\n                type: 'GET_ALL_DATA_PROMO',\n                data: response?.data?.data\n            })\n        })\n    }\n}\n\n// get promo - pagination\nexport const getPromo = (params) => {\n    console.log('ini1')\n    console.log(params)\n    return async dispatch => {\n        await axios.get(GET_PROMO, {params}).then(response => {\n            dispatch({\n                type: 'GET_DATA_PROMO',\n                data: response?.data?.data,\n                totalPages: response.data.total,\n                params\n            })\n        })\n    }\n}\n\n// get product by id\nexport const getPromoById = id => {\n    return dispatch => {\n        fetcher(GET_PROMO_BYID(id))\n            .then(response => {\n                dispatch({\n                    type: 'GET_PROMO_BYID',\n                    selectedPromo: response?.data?.data\n                })\n            })\n            .catch(err => console.log(err))\n    }\n}\n\n// get product by id\nexport const getPromoBySlug = slug => {\n    return dispatch => {\n        fetcher(GET_PROMO_BYSLUG(slug))\n            .then(response => {\n                dispatch({\n                    type: 'GET_PROMO_BYSLUG',\n                    selectedPromo: response?.data?.data\n                })\n            })\n            .catch(err => console.log(err))\n    }\n}\n\nexport const addPromo = promo => {\n    return async (dispatch, getState) => {\n        const req = { method: 'POST', data: promo }\n        await fetcher(GET_PROMO, req)\n            .then(response => {\n                dispatch({\n                    type: 'ADD_PROMO',\n                    promo\n                })\n            })\n            .then(() => {\n                dispatch(getPromo(getState().promos?.params))\n                dispatch(getAllDataPromo())\n            })\n    }\n}\n\nexport const deletePromo = id => {\n    return async (dispatch, getState) => {\n        await fetcher(GET_PROMO_BYID(id), {\n            method: 'DELETE'\n        })\n            .then(response => {\n                dispatch({\n                    type: 'DELETE_PROMO'\n                })\n            })\n            .then(() => {\n                dispatch(getPromo(getState().promo?.params))\n                dispatch(getAllDataPromo())\n            })\n    }\n}\n\nexport const updatePromo = (id, promo) => {\n    return async (dispatch, getState) => {\n        try {\n            const { \n                name, \n                slug, \n                tags, \n                products, \n                ermsAndConditions, \n                promoValue,\n                promoBy,\n                promoStart,\n                promoEnd,\n                isActive,\n                description,\n                platform,\n                image_promo \n            } = promo\n            const formData = new FormData()\n            // formData.append(\"image_promo\", image_promo[0])\n            formData.set('name', name) \n            formData.set('slug', slug) \n            formData.set('tags', tags) \n            formData.set('products', products) \n            formData.set('ermsAndConditions', ermsAndConditions) \n            formData.set('promoValue', promoValue)\n            formData.set('promoBy', promoBy)\n            formData.set('promoStart', promoStart)\n            formData.set('promoEnd', promoEnd)\n            formData.set('isActive', isActive)\n            formData.set('description', description)\n            formData.set('platform', platform)\n            // formData.set('image_promo', image_promo) \n\n            const req = {\n                method: 'PUT',\n                data: formData,\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                }\n            }\n            await fetcher(GET_PROMO_BYID(id), req).then(res => {\n                if (res) {\n                    dispatch({\n                        type: 'UPDATE_PROMO',\n                        data: res?.data.data\n                    })\n                }\n            }).then(() => {\n                dispatch(getPromo(getState().promos?.params))\n                dispatch(getAllDataPromo())\n            })\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}"],"sourceRoot":""}