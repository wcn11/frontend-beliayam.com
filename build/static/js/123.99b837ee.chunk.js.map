{"version":3,"sources":["views/order/charge/edit/Account.js","views/order/charge/edit/index.js","utility/Url.js","utility/axiosHooks.js","views/components/toasts/ToastUpdate.js","views/components/toasts/ToastError.js","utility/Toast.js","views/order/charge/store/action/index.js"],"names":["ChargeAccountTab","selectedCharge","dispatch","useDispatch","id","useParams","useForm","register","errors","handleSubmit","useState","chargeData","setChargeData","centeredModal","setCenteredModal","content","setContent","EditorState","createEmpty","editorState","setEditorState","contentTerms","setContentTerms","termsEditor","setTermsEditor","useEffect","contentBlock","htmlToDraft","description","contentState","ContentState","createFromBlockArray","contentBlocks","_editroState","createWithContent","termsBlock","termsAndConditions","termsState","_termsState","draftToHtml","convertToRaw","getCurrentContent","getChargeById","centerModal","Modal","isOpen","toggle","className","ModalHeader","ModalBody","ModalFooter","Button","color","onClick","Row","Col","sm","Media","body","chargeName","Form","e","preventDefault","md","FormGroup","Label","for","Input","type","name","placeholder","defaultValue","innerRef","required","chargeBy","chargeValue","isActive","value","shortDescription","onEditorStateChange","newState","Ripple","outline","values","isObjEmpty","updateCharge","_id","ChargeEdit","activeTab","setActiveTab","store","useSelector","state","charges","undefined","Card","CardBody","Nav","pills","NavItem","NavLink","active","size","TabContent","TabPane","tabId","Alert","to","REFRESH_TOKEN","process","LOGIN_URL","GET_ALL_DATA_USER","GET_USER_BYID","GET_USER_BYACTIVE","GET_CATEGORY","GET_CATEGORY_BYID","GET_PRODUCT","GET_PRODUCT_BYID","GET_CHARGE","GET_CHARGE_BYID","GET_PROMO","GET_PROMO_BYID","GET_VOUCHER","GET_VOUCHER_BYID","GET_ORDER","GET_ORDER_BYID","POST_FORCE_COMPLETE_ORDER","POST_CANCEL_ORDER","GET_ORDER_BYSTATUS","SET_STATUS_DELIVERY","GET_ORDER_DELIVER","GET_USER_FOR_DSB","ORDER_BY_PAYMENT_METHOD","TOTAL_REVENUE","TOTAL_ORDERS","TOTAL_PRODUCTS","TOTAL_USERS","axiosApiInstance","axios","create","baseURL","headers","Authorization","getToken","accessToken","localStorage","getItem","axiosInterceptorResponse","a","interceptors","response","use","res","err","originalConfig","config","status","_retry","post","refreshToken","rs","data","setItem","defaults","Promise","reject","fetcher","url","header","request","ToastUpdate","icon","title","ToastError","Toast","toast","success","transition","Slide","hideProgressBar","autoClose","ToastWarning","warning","getCharge","params","then","totalPages","total","console","log","addCharge","charge","getState","req","method","message","deleteCharge"],"mappings":"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","file":"static/js/123.99b837ee.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport { useDispatch } from 'react-redux'\n\nimport { isObjEmpty } from '@utils'\n\nimport { updateCharge, getChargeById } from '../store/action'\nimport { Edit, Trash2 } from 'react-feather'\nimport {\n   Media, Row, Col, Button, Form, Input, Label, FormGroup, ModalHeader,\n   ModalBody,\n   ModalFooter,\n   Modal,\n   FormText } from 'reactstrap'\n\nimport { Editor } from 'react-draft-wysiwyg'\nimport { EditorState, ContentState, convertToRaw } from 'draft-js'\nimport htmlToDraft from 'html-to-draftjs'\nimport draftToHtml from 'draftjs-to-html'\n\nimport '@styles/react/libs/editor/editor.scss'\nimport '@styles/base/plugins/forms/form-quill-editor.scss'\n\nconst ChargeAccountTab = ({ selectedCharge }) => {\n   const dispatch = useDispatch(),\n      { id } = useParams()\n\n   const { register, errors, handleSubmit } = useForm()\n   // ** States\n   const [img, setImg] = useState(null)\n   const [chargeData, setChargeData] = useState(null)\n   const [centeredModal, setCenteredModal] = useState(false)\n\n   const [content, setContent] = useState('')\n   const [editorState, setEditorState] = useState(() => EditorState.createEmpty())\n\n   const [contentTerms, setContentTerms] = useState('')\n   const [termsEditor, setTermsEditor] = useState(() => EditorState.createEmpty())\n\n   useEffect(() => {\n      setChargeData(selectedCharge)\n\n      //rich editor for description\n      const contentBlock = htmlToDraft(selectedCharge?.description)\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\n      const _editroState = (EditorState.createWithContent(contentState))\n\n      setEditorState(_editroState)\n\n      //rich editor for additional\n      const termsBlock = htmlToDraft(selectedCharge?.termsAndConditions)\n      const termsState = ContentState.createFromBlockArray(termsBlock.contentBlocks)\n      const _termsState = EditorState.createWithContent(termsState)\n\n      setTermsEditor(_termsState)\n\n   }, [selectedCharge])\n\n   useEffect(() => {\n      setContent(draftToHtml(convertToRaw(editorState.getCurrentContent())))\n      setContentTerms(draftToHtml(convertToRaw(termsEditor.getCurrentContent())))\n   }, [editorState, termsEditor])\n\n   const onChange = e => {\n      const reader = new FileReader(),\n         files = e.target.files\n      reader.onload = function () {\n         setImg(reader.result)\n      }\n      reader.readAsDataURL(files[0])\n   }\n\n   useEffect(() => {\n      dispatch(getChargeById(id))\n      // if (selectedCategory !== null || (selectedCategory !== null && categoryData !== null && selectedCategory?._id !== categoryData?._id)) {\n      //    // setCategoryData(selectedCategory)\n\n      //    // if (selectedCategory?.avatar?.length) {\n      //    //    return setImg(selectedCategory?.avatar)\n      //    // } else {\n      //    //    return setImg(null)\n      //    // }\n      // }\n   }, [id])\n\n   const onSubmit = (values) => {\n      if (isObjEmpty(errors)) {\n         dispatch(\n            updateCharge(id, {\n               chargeName: values.chargeName,\n               chargeBy: values.chargeBy,\n               chargeValue: values.chargeValue,\n               shortDescription: values.shortDescription,\n               description: content,\n               termsAndConditions: contentTerms,\n               isActive: values.isActive\n            })\n         )\n      }\n\n      setCenteredModal(!centeredModal)\n\n   }\n\n   const centerModal = () => {\n      return (\n         <Modal isOpen={centeredModal} toggle={() => setCenteredModal(!centeredModal)} className='modal-dialog-centered'>\n            <ModalHeader toggle={() => setCenteredModal(!centeredModal)}>Vertically Centered</ModalHeader>\n            <ModalBody>\n               Oat cake ice cream candy chocolate cake chocolate cake cotton candy dragée apple pie. Brownie carrot cake\n               candy canes bonbon fruitcake topping halvah. Cake sweet roll cake cheesecake cookie chocolate cake\n               liquorice.\n            </ModalBody>\n            <ModalFooter>\n               <Button color='primary' onClick={() => setCenteredModal(!centeredModal)}>\n                  Accept\n               </Button>{' '}\n            </ModalFooter>\n         </Modal>\n      )\n   }\n\n   if (!chargeData) {\n      return null\n   } else {\n      return (\n         <Row>\n            <Col sm='12'>\n               <Media className='mb-2'>\n                  {/* {renderUserAvatar()} */}\n                  <Media className='mt-50' body>\n                     <h4>{selectedCharge.chargeName} </h4>\n                     {/* <div className='d-flex flex-wrap mt-1 px-0'>\n                        <Button.Ripple id='change-img' tag={Label} className='mr-75 mb-0' color='primary'>\n                           <span className='d-none d-sm-block'>Change</span>\n                           <span className='d-block d-sm-none'>\n                              <Edit size={14} />\n                           </span>\n                           <input type='file' hidden id='change-img' onChange={onChange} accept='image/*' />\n                        </Button.Ripple>\n                        <Button.Ripple color='secondary' outline>\n                           <span className='d-none d-sm-block'>Remove</span>\n                           <span className='d-block d-sm-none'>\n                              <Trash2 size={14} />\n                           </span>\n                        </Button.Ripple>\n                     </div> */}\n                  </Media>\n               </Media>\n            </Col>\n            <Col sm='12'>\n               <Form onClick={e => e.preventDefault(centerModal)} key={chargeData._id}>\n                  <Row>\n                     <Col md='6' sm='12'>\n                        <FormGroup>\n                           <Label for='chargeName'>Charge Name</Label>\n                           <Input\n                              type='text'\n                              id='chargeName'\n                              name='chargeName'\n                              placeholder='Charge Name'\n                              defaultValue={chargeData.chargeName}\n                              innerRef={register({ required: true })}\n                           />\n                        </FormGroup>\n                     </Col>\n                     <Col md='6' sm='12'>\n                        <FormGroup>\n                           <Label for='chargeBy'>Charge By</Label>\n                           <Input\n                              type='text'\n                              id='chargeBy'\n                              name='chargeBy'\n                              placeholder='Charge By...'\n                              defaultValue={chargeData.chargeBy}\n                              innerRef={register({ required: true })}\n                           />\n                        </FormGroup>\n                     </Col>\n                     <Col md='6' sm='12'>\n                        <FormGroup>\n                           <Label for='chargeValue'>Charge Value</Label>\n                           <Input\n                              type='number'\n                              id='chargeValue'\n                              name='chargeValue'\n                              placeholder='Charge Value...'\n                              defaultValue={chargeData.chargeValue}\n                              innerRef={register({ required: true })}\n                           />\n                        </FormGroup>\n                     </Col>\n                     <Col md='6' sm='12'>\n                        <FormGroup>\n                           <Label for='isActive'>Status</Label>\n                           <Input\n                              type='select'\n                              id='isActive'\n                              name='isActive'\n                              placeholder='Status Charge'\n                              defaultValue={chargeData.isActive}\n                              innerRef={register({ required: true })}\n                           >\n                           <option value={true}>Active</option>\n                           <option value={false}>Nonactive</option>\n                           </Input>\n                        </FormGroup>\n                     </Col>\n                     <Col md='12' sm='12'>\n                        <FormGroup>\n                           <Label for='shortDescription'>Short Description</Label>\n                           <Input\n                              type='textarea'\n                              id='shortDescription'\n                              name='shortDescription'\n                              placeholder='Short Description....'\n                              defaultValue={chargeData.shortDescription}\n                              innerRef={register({ required: true })}\n                           />\n                        </FormGroup>\n                     </Col>\n                     <Col md='12' sm='12'>\n                        <FormGroup>\n                           <Label for='termsAndConditions'>Terms And Condition</Label>\n                           <Editor editorState={termsEditor} onEditorStateChange={newState => {\n                              setTermsEditor(newState)\n                              setContentTerms(draftToHtml(convertToRaw(newState.getCurrentContent())))\n                           }}/>\n                        </FormGroup>\n                     </Col>\n                     <Col md='12' sm='12'>\n                        <FormGroup>\n                           <Label for='description'>Description</Label>\n                           <Editor editorState={editorState} onEditorStateChange={newState => {\n                              setEditorState(newState)\n                              setContent(draftToHtml(convertToRaw(newState.getCurrentContent())))\n                           }}/>\n                        </FormGroup>\n                     </Col>\n                     <Col className='d-flex flex-sm-row flex-column mt-2' sm='12'>\n                        <Button.Ripple onClick={() => setCenteredModal(!centeredModal)} className='mb-1 mb-sm-0 mr-0 mr-sm-1' type='submit' color='primary'>\n                           Save Changes\n                        </Button.Ripple>\n                        <Button.Ripple color='secondary' outline>\n                           Reset\n                        </Button.Ripple>\n\n                        <Modal isOpen={centeredModal} toggle={() => setCenteredModal(!centeredModal)} className='modal-dialog-centered'>\n                           <ModalHeader toggle={() => setCenteredModal(!centeredModal)}>Update Charge</ModalHeader>\n                           <ModalBody>\n                              Apakah anda yakin untuk mengedit data tersebut?, pastikan sudah benar, cek lagi apa sudah yakin?\n                           </ModalBody>\n                           <ModalFooter>\n                              <Button color='primary' onClick={handleSubmit(onSubmit)}>\n                                 Accept\n                              </Button>{' '}\n                              <Button color='primary' outline onClick={() => setCenteredModal(!centeredModal)}>\n                                 Cancel\n                              </Button>{' '}\n                           </ModalFooter>\n                        </Modal>\n\n                     </Col>\n                  </Row>\n               </Form>\n            </Col>\n         </Row>\n      )\n   }\n}\n\nexport default ChargeAccountTab","import { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\nimport ChargeAccountTab from './Account'\n\nimport { getChargeById } from '../store/action'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DollarSign } from 'react-feather'\nimport { Card, CardBody, Row, Col, Nav, NavItem, NavLink, TabContent, TabPane, Alert } from 'reactstrap'\n\nimport '@styles/react/apps/app-users.scss'\n\nconst ChargeEdit = () => {\n   const [activeTab, setActiveTab] = useState('1'),\n      store = useSelector(state => state.charges),\n      dispatch = useDispatch(),\n      { id } = useParams()\n\n   const toggle = tab => setActiveTab(tab)\n\n   useEffect(() => {\n      dispatch(getChargeById(id))\n      // return () => dispatch(getChargeById(id))\n   }, [dispatch, id])\n\n   return store.selectedCharge !== null && store.selectedCharge !== undefined ? (\n      <Row className='app-user-edit'>\n         <Col sm='12'>\n            <Card>\n               <CardBody className='pt-2'>\n                  <Nav pills>\n                     <NavItem>\n                        <NavLink active={activeTab === '1'} onClick={() => toggle('1')}>\n                           <DollarSign size={14} />\n                           <span className='align-middle d-none d-sm-block'>Charge</span>\n                        </NavLink>\n                     </NavItem>\n                     {/* <NavItem>\n                                <NavLink active={activeTab === '2'} onClick={() => toggle('2')}>\n                                    <Info size={14} />\n                                    <span className='align-middle d-none d-sm-block'>Information</span>\n                                </NavLink>\n                            </NavItem> */}\n                     {/* <NavItem>\n                                <NavLink active={activeTab === '3'} onClick={() => toggle('3')}>\n                                    <Share2 size={14} />\n                                    <span className='align-middle d-none d-sm-block'>Social</span>\n                                </NavLink>\n                            </NavItem> */}\n                  </Nav>\n                  <TabContent activeTab={activeTab}>\n                     <TabPane tabId='1'>\n                        <ChargeAccountTab selectedCharge={store.selectedCharge} />\n                     </TabPane>\n                     <TabPane tabId='2'>\n                        {/* <InfoTab /> */}\n                     </TabPane>\n                     <TabPane tabId='3'>\n                     </TabPane>\n                  </TabContent>\n               </CardBody>\n            </Card>\n         </Col>\n      </Row>\n   ) : (\n      <Alert color='danger'>\n         <h4 className='alert-heading'>Product not found</h4>\n         <div className='alert-body'>\n            Product with id: {id} doesn't exist. Check list of all Products: <Link to='/order/charge/list'>Products List</Link>\n         </div>\n      </Alert>\n   )\n}\n\nexport default ChargeEdit","// auth url\nexport const REFRESH_TOKEN = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/auth/refresh-token`\nexport const LOGIN_URL = `http://localhost:4000/api/v1/admin/auth/login`\n\n// user url\nexport const GET_ALL_DATA_USER = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/users`\nexport const GET_USER_BYID = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/users/${id}`\nexport const GET_USER_BYACTIVE = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/users/${id}/active`\n\n// category url\nexport const GET_CATEGORY = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/category`\nexport const GET_CATEGORY_BYID = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/category/${id}`\nexport const GET_CATEGORY_SLUG = (slug) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/category/${slug}`\n\n// product url\nexport const GET_PRODUCT = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/product`\nexport const GET_PRODUCT_BYID = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/product/${id}`\nexport const GET_PRODUCT_SLUG = (slug) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/product/${slug}`\n\n// charge url\nexport const GET_CHARGE = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/charge`\nexport const GET_CHARGE_BYID = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/charge/${id}`\n\n// promo url\nexport const GET_PROMO = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/promo`\nexport const GET_PROMO_BYID = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/promo/${id}`\nexport const GET_PROMO_SLUG = (slug) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/promo/${slug}`\nexport const GET_PRODUCTS_BYPROMO = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/promo/${id}/product`\n\n// Voucher\nexport const GET_VOUCHER = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/voucher`\nexport const GET_VOUCHER_BYID = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/voucher/${id}`\nexport const GET_VOUCHER_SLUG = (slug) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/voucher/${slug}`\n\n// order url\nexport const GET_ORDER = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order`\nexport const GET_ORDER_BYID = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order/${id}`\nexport const POST_FORCE_COMPLETE_ORDER = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order/${id}/complete-order`\nexport const POST_CANCEL_ORDER = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order/${id}/cancel-order`\nexport const GET_ORDER_BYSTATUS = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order/status`\nexport const SET_STATUS_DELIVERY = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order/delivery`\nexport const GET_ORDER_DELIVER = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order/delivery/fetch`\n\n// dashboard\nexport const GET_USER_FOR_DSB = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/users/time-range/client`\nexport const GET_ORDER_FOR_DSB = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/users/time-range/client`\n\n// charts\nexport const ORDER_BY_PAYMENT_METHOD = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order/by-payment-method`\n\n// Statistic\nexport const TOTAL_REVENUE = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/sales/revenue`\nexport const TOTAL_ORDERS = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/sales/total`\nexport const TOTAL_PRODUCTS = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/product/total`\nexport const TOTAL_USERS = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/users/total`\n","import axios from 'axios'\nimport { REFRESH_TOKEN } from './Url'\n\nconst axiosApiInstance = axios.create({\n    baseURL: `${process.env.REACT_APP_BASE_URL_API}`,\n    headers: {\n        Authorization: 'Bearer token'\n    }\n})\n\nconst getToken = (accessToken) => {\n    return localStorage.getItem(accessToken)\n}\n\nconst getRefreshToken = () => {\n    return localStorage.getItem(refreshToken)\n}\n\nconst fetchRefreshToken = () => {\n    return axios.post(REFRESH_TOKEN, {\n        refreshToken: getRefreshToken()\n    })\n}\n\n\nconst axiosInterceptor = () => {\n    axiosApiInstance.interceptors.request.use(async (config) => {\n        if (!config.headers.Authorization) {\n            const plainToken = getToken()\n            const token = plainToken\n            if (token) {\n                config.headers.Authorization = `Bearer ${getToken()}`\n            }\n        }\n        return config\n    })\n}\n\nconst axiosInterceptorResponse = async () => {\n    axios.interceptors.response.use(\n        (res) => {\n            return res\n        },\n        async (err) => {\n            const originalConfig = err.config\n            if (err.response) {\n                if (err.response.status === 401 && !originalConfig._retry) {\n                    originalConfig._retry = true\n                    try {\n                        const rs = await fetchRefreshToken()\n                        const {accessToken} = rs.data\n                        localStorage.setItem('accessToken', accessToken)\n                        axiosApiInstance.defaults.headers.Authorization = `Bearer ${accessToken}`\n                        return axiosApiInstance(originalConfig)\n                    } catch (error) {\n                        if (error.response && error.response.data) {\n                            return Promise.reject(error.response.data)\n                        }\n                        return Promise.reject(error)\n                    }\n                }\n                if (err.response.status === 403 && err.response.data) {\n                    return Promise.reject(err.response.data)\n                }\n            }\n            return Promise.reject(err)\n        }\n    )\n}\n\n\nexport const fetcher = async (url, config) => {\n    const header = {\n        ...config,\n        url,\n        headers: {\n            'Content-Type': 'application/json',\n            ...config?.headers\n        }\n    }\n\n    try {\n        axiosInterceptor()\n        const res = await axios.request(header)\n\n        if (res) {\n            axiosInterceptorResponse()\n            return res\n        }\n    } catch (err) {\n        throw err?.response\n    }\n}\n","import { Fragment } from \"react\";\nimport Avatar from '@components/avatar'\n\nconst ToastUpdate = ({icon, content, title}) => (\n   <Fragment>\n      <div className='toastify-header'>\n         <div className='title-wrapper'>\n            <Avatar size='sm' color='success' icon={icon} />\n            <h6 className='toast-title font-weight-bold'>{title}</h6>\n         </div>\n      </div>\n      <div className='toastify-body'>\n         <span>{content}</span>\n      </div>\n   </Fragment>\n)\n\nexport default ToastUpdate","import { Fragment } from \"react\"\nimport Avatar from '@components/avatar'\n\nconst ToastError = ({ icon, content, title }) => (\n   <Fragment>\n      <div className='toastify-header'>\n         <div className='title-wrapper'>\n            <Avatar size='sm' color='warning' icon={icon} />\n            <h6 className='toast-title font-weight-bold'>{title}</h6>\n         </div>\n      </div>\n      <div className='toastify-body'>\n         <span>{content}</span>\n      </div>\n   </Fragment>\n)\n\nexport default ToastError","import { toast, Slide } from 'react-toastify'\nimport ToastUpdate from '../views/components/toasts/ToastUpdate'\nimport ToastError from '../views/components/toasts/ToastError'\n\nexport const Toast = ({icon, title, content}) => {\n   toast.success(\n      <ToastUpdate\n         icon={icon}\n         title={title}\n         content={content}\n      />,\n      { transition: Slide, hideProgressBar: true, autoClose: 4000 }\n   )\n}\n\nexport const ToastWarning = ({ icon, title, content }) => {\n   toast.warning(\n      <ToastError\n         icon={icon}\n         title={title}\n         content={content}\n      />,\n      { transition: Slide, hideProgressBar: true, autoClose: 4000 }\n   )\n}","import { fetcher } from '@src/utility/axiosHooks'\nimport { GET_CHARGE, GET_CHARGE_BYID } from \"@src/utility/Url\"\nimport { Check, X } from 'react-feather'\nimport { Toast, ToastWarning } from '@src/utility/Toast'\n\nexport const getCharge = params => {\n   return async dispatch => {\n      try {\n         await fetcher(GET_CHARGE, { params }).then(res => {\n            dispatch({\n               type: 'GET_DATA_CHARGE',\n               data: res?.data?.data,\n               totalPages: res?.data?.total,\n               params\n            })\n         })\n      } catch (error) {\n         console.log('tidak dapat mengambil kategori', error)\n      }\n   }\n}\n\nexport const getChargeById = (id) => {\n   return async dispatch => {\n      try {\n         await fetcher(GET_CHARGE_BYID(id))\n            .then(res => {\n               dispatch({\n                  type: 'GET_CHARGE_BYID',\n                  selectedCharge: res?.data?.data\n               })\n            })\n      } catch (error) {\n         console.log('tidak dapat mengambil kategori', error)\n      }\n   }\n}\n\nexport const addCharge = charge => {\n   return async (dispatch, getState) => {\n      try {\n         const req = { method: 'POST', data: charge }\n         const res = await fetcher(GET_CHARGE, req)\n         if (res) {\n            dispatch({\n               type: 'ADD_CHARGE',\n               charge\n            })\n            dispatch(getCharge(getState().charges?.params))\n            Toast({ icon: <Check size={12} />, title: 'Berhasil Horeee', content: res?.data?.message })\n         }\n\n      } catch (error) {\n         ToastWarning({\n            icon: <X size={12} />,\n            title: 'Ada error nih',\n            content: error?.data?.message\n         })\n      }\n\n   }\n}\n\nexport const deleteCharge = id => {\n   return async (dispatch, getState) => {\n      try {\n         const res = await fetcher(GET_CHARGE_BYID(id), {\n            method: 'DELETE'\n         })\n         if (res) {\n            dispatch({\n               type: 'DELETE_CATEGORY'\n            })\n            dispatch(getCharge(getState().charges?.params))\n            Toast({ icon: <Check size={12} />, title: 'Berhasil Horeee', content: res.data.message })\n         }\n      } catch (error) {\n         ToastWarning({\n            icon: <X size={12} />,\n            title: 'Ada error nih',\n            content: error.data.message\n         })\n      }\n   }\n}\n\nexport const updateCharge = (id, charge) => {\n   return async (dispatch, getState) => {\n      try {\n         const req = {\n            method: 'PUT',\n            data: charge,\n         }\n\n         const res = await fetcher(GET_CHARGE_BYID(id), req)\n               if (res) {\n                  dispatch({\n                     type: 'UPDATE_CHARGE',\n                     data: res?.data?.data\n                  })\n                  dispatch(getCharge(getState().charges?.params))\n                  Toast({ icon: <Check size={12} />, title: 'Berhasil Horeee', content: res?.data?.message })\n               }\n      } catch (error) {\n         ToastWarning({\n            icon: <X size={12} />,\n            title: 'Ada error nih',\n            content: error?.data?.message\n         })\n      }\n   }\n}"],"sourceRoot":""}