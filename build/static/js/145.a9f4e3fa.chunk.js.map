{"version":3,"sources":["views/order/charge/edit/Account.js","views/order/charge/edit/index.js","utility/Url.js","utility/axiosHooks.js","views/components/toasts/ToastUpdate.js","views/order/charge/store/action/index.js"],"names":["ChargeAccountTab","selectedCharge","dispatch","useDispatch","id","useParams","useForm","register","errors","handleSubmit","useState","setImg","chargeData","setChargeData","centeredModal","setCenteredModal","useEffect","getChargeById","centerModal","Modal","isOpen","toggle","className","ModalHeader","ModalBody","ModalFooter","Button","color","onClick","Row","Col","sm","Media","body","chargeName","Ripple","tag","Label","size","type","hidden","onChange","e","reader","FileReader","files","target","onload","result","readAsDataURL","accept","outline","Form","preventDefault","md","FormGroup","for","Input","name","placeholder","defaultValue","innerRef","required","chargeBy","chargeValue","shortDescription","termsAndConditions","description","values","isObjEmpty","updateCharge","toast","success","ToastUpdate","icon","content","transition","Slide","hideProgressBar","autoClose","ChargeEdit","activeTab","setActiveTab","store","useSelector","state","charges","undefined","Card","CardBody","Nav","pills","NavItem","NavLink","active","TabContent","TabPane","tabId","Alert","to","REFRESH_TOKEN","LOGIN_URL","GET_ALL_DATA_USER","GET_USER_BYID","GET_USER_BYACTIVE","GET_CATEGORY","GET_CATEGORY_BYID","GET_PRODUCT","GET_PRODUCT_BYID","GET_CHARGE","GET_CHARGE_BYID","GET_PROMO","GET_PROMO_BYID","GET_VOUCHER","GET_VOUCHER_BYID","GET_ORDER","GET_ORDER_BYID","axios","defaults","baseURL","headers","common","axiosApiInstance","create","getToken","accessToken","localStorage","getItem","fetcher","url","config","a","header","interceptors","request","use","Authorization","res","response","getCharge","params","then","data","totalPages","total","console","log","addCharge","charge","getState","req","method","deleteCharge"],"mappings":"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","file":"static/js/145.a9f4e3fa.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { isObjEmpty } from '@utils'\r\n\r\nimport { updateCharge, getChargeById } from '../store/action'\r\nimport { toast, Slide } from 'react-toastify'\r\nimport ToastUpdate from '../../../components/toasts/ToastUpdate'\r\nimport { Check, Edit, Trash2 } from 'react-feather'\r\nimport {\r\n   Media, Row, Col, Button, Form, Input, Label, FormGroup, ModalHeader,\r\n   ModalBody,\r\n   ModalFooter,\r\n   Modal,\r\n   FormText } from 'reactstrap'\r\n\r\nconst ChargeAccountTab = ({ selectedCharge }) => {\r\n   const dispatch = useDispatch(),\r\n      { id } = useParams()\r\n\r\n   const { register, errors, handleSubmit } = useForm()\r\n   // ** States\r\n   const [img, setImg] = useState(null)\r\n   const [chargeData, setChargeData] = useState(null)\r\n   const [centeredModal, setCenteredModal] = useState(false)\r\n\r\n   const onChange = e => {\r\n      const reader = new FileReader(),\r\n         files = e.target.files\r\n      reader.onload = function () {\r\n         setImg(reader.result)\r\n      }\r\n      reader.readAsDataURL(files[0])\r\n   }\r\n\r\n   useEffect(() => {\r\n      dispatch(getChargeById(id))\r\n      // if (selectedCategory !== null || (selectedCategory !== null && categoryData !== null && selectedCategory?._id !== categoryData?._id)) {\r\n      //    // setCategoryData(selectedCategory)\r\n\r\n      //    // if (selectedCategory?.avatar?.length) {\r\n      //    //    return setImg(selectedCategory?.avatar)\r\n      //    // } else {\r\n      //    //    return setImg(null)\r\n      //    // }\r\n      // }\r\n   }, [id])\r\n\r\n   useEffect(() => {\r\n      setChargeData(selectedCharge)\r\n   }, [selectedCharge])\r\n\r\n   const onSubmit = (values) => {\r\n      if (isObjEmpty(errors)) {\r\n         dispatch(\r\n            updateCharge(id, {\r\n               chargeName: values.chargeName,\r\n               chargeBy: values.chargeBy,\r\n               chargeValue: values.chargeValue,\r\n               shortDescription: values.shortDescription,\r\n               description: values.description,\r\n               termsAndConditions: values.termsAndConditions,\r\n            })\r\n         )\r\n      }\r\n\r\n      setCenteredModal(!centeredModal)\r\n\r\n      toast.success(\r\n         <ToastUpdate\r\n            icon={<Check size={12} />}\r\n            content='Charge'\r\n         />,\r\n         { transition: Slide, hideProgressBar: true, autoClose: 3000 }\r\n      )\r\n   }\r\n\r\n   const centerModal = () => {\r\n      return (\r\n         <Modal isOpen={centeredModal} toggle={() => setCenteredModal(!centeredModal)} className='modal-dialog-centered'>\r\n            <ModalHeader toggle={() => setCenteredModal(!centeredModal)}>Vertically Centered</ModalHeader>\r\n            <ModalBody>\r\n               Oat cake ice cream candy chocolate cake chocolate cake cotton candy dragée apple pie. Brownie carrot cake\r\n               candy canes bonbon fruitcake topping halvah. Cake sweet roll cake cheesecake cookie chocolate cake\r\n               liquorice.\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color='primary' onClick={() => setCenteredModal(!centeredModal)}>\r\n                  Accept\r\n               </Button>{' '}\r\n            </ModalFooter>\r\n         </Modal>\r\n      )\r\n   }\r\n\r\n   if (!chargeData) {\r\n      return null\r\n   } else {\r\n      return (\r\n         <Row>\r\n            <Col sm='12'>\r\n               <Media className='mb-2'>\r\n                  {/* {renderUserAvatar()} */}\r\n                  <Media className='mt-50' body>\r\n                     <h4>{selectedCharge.chargeName} </h4>\r\n                     <div className='d-flex flex-wrap mt-1 px-0'>\r\n                        <Button.Ripple id='change-img' tag={Label} className='mr-75 mb-0' color='primary'>\r\n                           <span className='d-none d-sm-block'>Change</span>\r\n                           <span className='d-block d-sm-none'>\r\n                              <Edit size={14} />\r\n                           </span>\r\n                           <input type='file' hidden id='change-img' onChange={onChange} accept='image/*' />\r\n                        </Button.Ripple>\r\n                        <Button.Ripple color='secondary' outline>\r\n                           <span className='d-none d-sm-block'>Remove</span>\r\n                           <span className='d-block d-sm-none'>\r\n                              <Trash2 size={14} />\r\n                           </span>\r\n                        </Button.Ripple>\r\n                     </div>\r\n                  </Media>\r\n               </Media>\r\n            </Col>\r\n            <Col sm='12'>\r\n               <Form onClick={e => e.preventDefault(centerModal)}>\r\n                  <Row>\r\n                     <Col md='4' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='chargeName'>Charge Name</Label>\r\n                           <Input\r\n                              type='text'\r\n                              id='chargeName'\r\n                              name='chargeName'\r\n                              placeholder='Charge Name'\r\n                              defaultValue={chargeData.chargeName}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                        </FormGroup>\r\n                     </Col>\r\n                     <Col md='4' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='chargeBy'>Charge By</Label>\r\n                           <Input\r\n                              type='text'\r\n                              id='chargeBy'\r\n                              name='chargeBy'\r\n                              placeholder='Charge By...'\r\n                              defaultValue={chargeData.chargeBy}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                        </FormGroup>\r\n                     </Col>\r\n                     <Col md='4' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='chargeValue'>Charge Value</Label>\r\n                           <Input\r\n                              type='number'\r\n                              id='chargeValue'\r\n                              name='chargeValue'\r\n                              placeholder='Charge Value...'\r\n                              defaultValue={chargeData.chargeValue}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                        </FormGroup>\r\n                     </Col>\r\n                     <Col md='4' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='shortDescription'>Short Description</Label>\r\n                           <Input\r\n                              type='text'\r\n                              id='shortDescription'\r\n                              name='shortDescription'\r\n                              placeholder='Short Description....'\r\n                              defaultValue={chargeData.shortDescription}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                        </FormGroup>\r\n                     </Col>\r\n\r\n                     <Col md='4' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='termsAndConditions'>Terms And Condition</Label>\r\n                           <Input\r\n                              type='text'\r\n                              id='termsAndConditions'\r\n                              name='termsAndConditions'\r\n                              placeholder='Terms And Condition....'\r\n                              defaultValue={chargeData.termsAndConditions}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                        </FormGroup>\r\n                     </Col>\r\n                     <Col md='12' sm='12'>\r\n                        <FormGroup>\r\n                           <Label for='description'>Description</Label>\r\n                           <Input\r\n                              type='textarea'\r\n                              id='description'\r\n                              name='description'\r\n                              placeholder='Short Description....'\r\n                              defaultValue={chargeData.description}\r\n                              innerRef={register({ required: true })}\r\n                           />\r\n                        </FormGroup>\r\n                     </Col>\r\n                     <Col className='d-flex flex-sm-row flex-column mt-2' sm='12'>\r\n                        <Button.Ripple onClick={() => setCenteredModal(!centeredModal)} className='mb-1 mb-sm-0 mr-0 mr-sm-1' type='submit' color='primary'>\r\n                           Save Changes\r\n                        </Button.Ripple>\r\n                        <Button.Ripple color='secondary' outline>\r\n                           Reset\r\n                        </Button.Ripple>\r\n\r\n                        <Modal isOpen={centeredModal} toggle={() => setCenteredModal(!centeredModal)} className='modal-dialog-centered'>\r\n                           <ModalHeader toggle={() => setCenteredModal(!centeredModal)}>Update Charge</ModalHeader>\r\n                           <ModalBody>\r\n                              Apakah anda yakin untuk mengedit data tersebut?, pastikan sudah benar, cek lagi apa sudah yakin?\r\n                           </ModalBody>\r\n                           <ModalFooter>\r\n                              <Button color='primary' onClick={handleSubmit(onSubmit)}>\r\n                                 Accept\r\n                              </Button>{' '}\r\n                              <Button color='primary' outline onClick={() => setCenteredModal(!centeredModal)}>\r\n                                 Cancel\r\n                              </Button>{' '}\r\n                           </ModalFooter>\r\n                        </Modal>\r\n\r\n                     </Col>\r\n                  </Row>\r\n               </Form>\r\n            </Col>\r\n         </Row>\r\n      )\r\n   }\r\n}\r\n\r\nexport default ChargeAccountTab","import { useState, useEffect } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\n\r\nimport ChargeAccountTab from './Account'\r\n\r\nimport { getChargeById } from '../store/action'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { DollarSign } from 'react-feather'\r\nimport { Card, CardBody, Row, Col, Nav, NavItem, NavLink, TabContent, TabPane, Alert } from 'reactstrap'\r\n\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst ChargeEdit = () => {\r\n   const [activeTab, setActiveTab] = useState('1'),\r\n      store = useSelector(state => state.charges),\r\n      dispatch = useDispatch(),\r\n      { id } = useParams()\r\n\r\n   const toggle = tab => setActiveTab(tab)\r\n\r\n   useEffect(() => {\r\n      dispatch(getChargeById(id))\r\n      return () => dispatch(getChargeById(id))\r\n   }, [dispatch, id])\r\n\r\n   return store.selectedCharge !== null && store.selectedCharge !== undefined ? (\r\n      <Row className='app-user-edit'>\r\n         <Col sm='12'>\r\n            <Card>\r\n               <CardBody className='pt-2'>\r\n                  <Nav pills>\r\n                     <NavItem>\r\n                        <NavLink active={activeTab === '1'} onClick={() => toggle('1')}>\r\n                           <DollarSign size={14} />\r\n                           <span className='align-middle d-none d-sm-block'>Charge</span>\r\n                        </NavLink>\r\n                     </NavItem>\r\n                     {/* <NavItem>\r\n                                <NavLink active={activeTab === '2'} onClick={() => toggle('2')}>\r\n                                    <Info size={14} />\r\n                                    <span className='align-middle d-none d-sm-block'>Information</span>\r\n                                </NavLink>\r\n                            </NavItem> */}\r\n                     {/* <NavItem>\r\n                                <NavLink active={activeTab === '3'} onClick={() => toggle('3')}>\r\n                                    <Share2 size={14} />\r\n                                    <span className='align-middle d-none d-sm-block'>Social</span>\r\n                                </NavLink>\r\n                            </NavItem> */}\r\n                  </Nav>\r\n                  <TabContent activeTab={activeTab}>\r\n                     <TabPane tabId='1'>\r\n                        <ChargeAccountTab selectedCharge={store.selectedCharge} />\r\n                     </TabPane>\r\n                     <TabPane tabId='2'>\r\n                        {/* <InfoTab /> */}\r\n                     </TabPane>\r\n                     <TabPane tabId='3'>\r\n                     </TabPane>\r\n                  </TabContent>\r\n               </CardBody>\r\n            </Card>\r\n         </Col>\r\n      </Row>\r\n   ) : (\r\n      <Alert color='danger'>\r\n         <h4 className='alert-heading'>Product not found</h4>\r\n         <div className='alert-body'>\r\n            Product with id: {id} doesn't exist. Check list of all Products: <Link to='/order/charge/list'>Products List</Link>\r\n         </div>\r\n      </Alert>\r\n   )\r\n}\r\n\r\nexport default ChargeEdit","// auth url\r\nexport const REFRESH_TOKEN = 'https://be-dev.beliayam.com/api/v1/admin/auth/refresh-token'\r\nexport const LOGIN_URL = 'https://be-dev.beliayam.com/api/v1/admin/auth/login'\r\n\r\n// user url\r\nexport const GET_ALL_DATA_USER = 'https://be-dev.beliayam.com/api/v1/admin/users'\r\nexport const GET_USER_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/users/${id}`\r\nexport const GET_USER_BYACTIVE = (active) => `https://be-dev.beliayam.com/api/v1/admin/users/${active}`\r\n\r\n// category url\r\nexport const GET_CATEGORY = 'https://be-dev.beliayam.com/api/v1/admin/category'\r\nexport const GET_CATEGORY_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/category/${id}`\r\nexport const GET_CATEGORY_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/category/${slug}`\r\n\r\n// product url\r\nexport const GET_PRODUCT = 'https://be-dev.beliayam.com/api/v1/admin/product'\r\nexport const GET_PRODUCT_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/product/${id}`\r\nexport const GET_PRODUCT_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/product/${slug}`\r\n\r\n// charge url\r\nexport const GET_CHARGE = 'https://be-dev.beliayam.com/api/v1/admin/charge'\r\nexport const GET_CHARGE_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/charge/${id}`\r\n\r\n// promo url\r\nexport const GET_PROMO = 'https://be-dev.beliayam.com/api/v1/admin/promo'\r\nexport const GET_PROMO_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/promo/${id}`\r\nexport const GET_PROMO_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/promo/${slug}`\r\n\r\n// Voucher\r\nexport const GET_VOUCHER = 'https://be-dev.beliayam.com/api/v1/admin/voucher'\r\nexport const GET_VOUCHER_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/voucher/${id}`\r\nexport const GET_VOUCHER_SLUG = (slug) => `https://be-dev.beliayam.com/api/v1/admin/voucher/${slug}`\r\n\r\n// order url\r\nexport const GET_ORDER = 'https://be-dev.beliayam.com/api/v1/admin/order'\r\nexport const GET_ORDER_BYID = (id) => `https://be-dev.beliayam.com/api/v1/admin/order/${id}`\r\n","import axios from 'axios'\r\nimport { REFRESH_TOKEN } from './Url'\r\n\r\naxios.defaults.baseURL = 'https://be-dev.beliayam.com/'\r\naxios.defaults.headers.common['Authorization'] = 'Bearer token'\r\nconst axiosApiInstance = axios.create()\r\n\r\nconst getToken = (accessToken) => {\r\n    return localStorage.getItem(accessToken)\r\n}\r\n\r\nconst axiosInterceptor = () => {\r\n    axiosApiInstance.interceptors.request.use(async (config) => {\r\n        if (!config.headers.Authorization) {\r\n            const plainToken = getToken()\r\n            const token = plainToken\r\n            if (token) {\r\n                config.headers.Authorization = `Bearer ${getToken()}`\r\n            }\r\n        }\r\n        return config\r\n    })\r\n}\r\n\r\nconst axiosInterceptorResponse = async () => {\r\n    axios.interceptors.response.use(\r\n        response => {\r\n            return response\r\n        },\r\n        error => {\r\n            if (error.response.status !== 401) {\r\n                return Promise.reject(error)\r\n            }\r\n            const tokens = {\r\n                accessToken: localStorage.getItem('accessToken'),\r\n                refreshToken: localStorage.getItem('refreshToken')\r\n            }\r\n\r\n            return axios\r\n                .post(REFRESH_TOKEN, tokens)\r\n                .then(response => {\r\n                    localStorage.setItem('accessToken', response.data.token.accessToken)\r\n                    localStorage.setItem('refreshToken', response.data.token.refreshToken)\r\n\r\n                    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.token.accessToken}`\r\n\r\n                    error.hasRefreshedToken = true\r\n                    return Promise.reject(tokenError)\r\n                }).catch(() => {\r\n                    const tokenError = new Error(\"Cannot refresh token\")\r\n                    tokenError.originalError = error\r\n                    return Promise.reject(tokenError)\r\n                })\r\n        }\r\n\r\n\r\n    )\r\n}\r\n\r\nfunction axiosWithTokenRefresh(config) {\r\n    return axios(config).catch(error => {\r\n        return error.hasRefreshedToken ? axios(config) : Promise.reject(error)\r\n    })\r\n}\r\n\r\n\r\nexport const fetcher = async (url, config) => {\r\n    //   const { getLocalStorage } = localStorageHooks()\r\n    //   const roleId = getLocalStorage(LOCALSTORAGE_KEY.ROLE_ID)\r\n\r\n    const header = {\r\n        ...config,\r\n        url,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            ...config?.headers\r\n        }\r\n    }\r\n\r\n    try {\r\n        axiosInterceptor()\r\n        // axiosWithTokenRefresh()\r\n        const res = await axios.request(header)\r\n\r\n        if (res) {\r\n            // axiosInterceptorResponse()\r\n            return res\r\n        }\r\n    } catch (err) {\r\n        throw err?.response\r\n    }\r\n}\r\n","import { Fragment } from \"react\";\r\nimport Avatar from '@components/avatar'\r\n\r\nconst ToastUpdate = ({icon, content}) => (\r\n   <Fragment>\r\n      <div className='toastify-header'>\r\n         <div className='title-wrapper'>\r\n            <Avatar size='sm' color='success' icon={icon} />\r\n            <h6 className='toast-title font-weight-bold'>Update Berhasil</h6>\r\n         </div>\r\n      </div>\r\n      <div className='toastify-body'>\r\n         <span>{content} telah berhasil diupdate, silahkan cek kembali!</span>\r\n      </div>\r\n   </Fragment>\r\n)\r\n\r\nexport default ToastUpdate","import { fetcher } from '@src/utility/axiosHooks'\r\nimport { GET_CHARGE, GET_CHARGE_BYID } from \"@src/utility/Url\"\r\n\r\nexport const getCharge = params => {\r\n   return async dispatch => {\r\n      try {\r\n         await fetcher(GET_CHARGE, { params }).then(res => {\r\n            dispatch({\r\n               type: 'GET_DATA_CHARGE',\r\n               data: res?.data?.data,\r\n               totalPages: res?.data?.total,\r\n               params\r\n            })\r\n         })\r\n      } catch (error) {\r\n         console.log(error)\r\n      }\r\n   }\r\n}\r\n\r\nexport const getChargeById = (id) => {\r\n   return async dispatch => {\r\n      try {\r\n         await fetcher(GET_CHARGE_BYID(id))\r\n            .then(res => {\r\n               dispatch({\r\n                  type: 'GET_CHARGE_BYID',\r\n                  selectedCharge: res?.data?.data\r\n               })\r\n            })\r\n      } catch (error) {\r\n         console.log(error)\r\n      }\r\n   }\r\n}\r\n\r\nexport const addCharge = charge => {\r\n   return async (dispatch, getState) => {\r\n      const req = { method: 'POST', data: charge }\r\n      await fetcher(GET_CHARGE, req).then(() => {\r\n         dispatch({\r\n            type: 'ADD_CHARGE',\r\n            charge\r\n         })\r\n      }).then(() => {\r\n         dispatch(getCharge(getState().charges?.params))\r\n      })\r\n   }\r\n}\r\n\r\nexport const deleteCharge = id => {\r\n   return async (dispatch, getState) => {\r\n      try {\r\n         await fetcher(GET_CHARGE_BYID(id), {\r\n            method: 'DELETE'\r\n         }).then(() => {\r\n            dispatch({\r\n               type: 'DELETE_CATEGORY'\r\n            })\r\n         }).then(() => {\r\n            dispatch(getCharge(getState().charges?.params))\r\n         })\r\n      } catch (error) {\r\n         console.log(error)\r\n      }\r\n   }\r\n}\r\n\r\nexport const updateCharge = (id, charge) => {\r\n   return async (dispatch, getState) => {\r\n      try {\r\n         const req = {\r\n            method: 'PUT',\r\n            data: charge,\r\n         }\r\n\r\n         await fetcher(GET_CHARGE_BYID(id), req)\r\n            .then(res => {\r\n               if (res) {\r\n                  dispatch({\r\n                     type: 'UPDATE_CHARGE',\r\n                     data: res?.data?.data\r\n                  })\r\n               }\r\n            }).then(() => {\r\n               dispatch(getCharge(getState().charges?.params))\r\n            })\r\n      } catch (error) {\r\n         console.log(error)\r\n      }\r\n   }\r\n}"],"sourceRoot":""}