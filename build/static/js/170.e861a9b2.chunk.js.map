{"version":3,"sources":["views/pages/authentication/Login.js","utility/Url.js","utility/axiosHooks.js","@core/components/input-password-toggle/index.js"],"names":["ToastContent","name","role","className","size","color","icon","Login","props","useSkin","skin","ability","useContext","AbilityContext","dispatch","useDispatch","history","useHistory","useState","email","setEmail","password","setPassword","useForm","register","errors","handleSubmit","illustration","source","require","default","onSubmit","a","isObjEmpty","request","method","data","fetcher","LOGIN_URL","res","admin","token","id","_id","username","roleName","action","subject","accessToken","refreshToken","handleLogin","update","push","getHomeRouteForLoggedInUser","toast","success","fullName","transition","Slide","hideProgressBar","autoClose","console","log","to","onClick","e","preventDefault","src","logo","height","alt","lg","sm","md","tag","for","autoFocus","type","value","placeholder","onChange","target","classnames","innerRef","required","validate","label","Ripple","block","REFRESH_TOKEN","process","GET_ALL_DATA_USER","GET_USER_BYID","GET_USER_BYACTIVE","GET_CATEGORY","GET_CATEGORY_BYID","GET_PRODUCT","GET_PRODUCT_BYID","GET_CHARGE","GET_CHARGE_BYID","GET_PROMO","GET_PROMO_BYID","GET_VOUCHER","GET_VOUCHER_BYID","GET_ORDER","GET_ORDER_BYID","POST_FORCE_COMPLETE_ORDER","POST_CANCEL_ORDER","GET_ORDER_BYSTATUS","SET_STATUS_DELIVERY","GET_ORDER_DELIVER","GET_USER_FOR_DSB","ORDER_BY_PAYMENT_METHOD","TOTAL_REVENUE","TOTAL_ORDERS","TOTAL_PRODUCTS","TOTAL_USERS","axiosApiInstance","axios","create","baseURL","headers","Authorization","getToken","localStorage","getItem","axiosInterceptorResponse","interceptors","response","use","err","originalConfig","config","status","_retry","post","rs","setItem","defaults","Promise","reject","url","header","InputPasswordToggle","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","addonType","renderIcon","defaultProps"],"mappings":"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","file":"static/js/170.e861a9b2.chunk.js","sourcesContent":["import { useState, useContext, Fragment } from 'react'\nimport { LOGIN_URL } from '@src/utility/Url'\nimport { fetcher } from '@src/utility/axiosHooks'\nimport classnames from 'classnames'\nimport Avatar from '@components/avatar'\nimport { useSkin } from '@hooks/useSkin'\nimport { useDispatch } from 'react-redux'\nimport { useForm } from 'react-hook-form'\nimport { toast, Slide } from 'react-toastify'\nimport { handleLogin } from '@store/actions/auth'\nimport { AbilityContext } from '@src/utility/context/Can'\nimport { Link, useHistory } from 'react-router-dom'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\nimport logo from '@src/assets/images/logo/logo.png'\nimport { Coffee } from 'react-feather'\nimport {\n  Alert,\n  Row,\n  Col,\n  CardTitle,\n  CardText,\n  Form,\n  Input,\n  FormGroup,\n  Label,\n  CustomInput,\n  Button,\n  UncontrolledTooltip\n} from 'reactstrap'\n\nimport '@styles/base/pages/page-auth.scss'\n\nconst ToastContent = ({ name, role }) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\n        <h6 className='toast-title font-weight-bold'>Selamat Datang, {name}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span>Anda berhasil login sebagai {role}. Sekarang anda bisa mulai bekerja. Enjoy!</span>\n    </div>\n  </Fragment>\n)\n\nconst Login = props => {\n  const [skin, setSkin] = useSkin()\n  const ability = useContext(AbilityContext)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const { register, errors, handleSubmit } = useForm()\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n\n  const onSubmit = async () => {\n    if (isObjEmpty(errors)) {\n      const request = {\n        method: 'POST',\n        data: {\n          email,\n          password\n        }\n      }\n      try {\n        const res = await fetcher(LOGIN_URL, request)\n        const { admin, token } = res.data.data\n        const data = {\n          id: admin._id,\n          name: admin.name,\n          username: admin.username,\n          email: admin.email,\n          role: admin.role.roleName,\n          ability: [\n            {\n              action: 'manage',\n              subject: 'all'\n            }\n          ],\n          accessToken: token.accessToken,\n          refreshToken: token.refreshToken\n\n        }\n        dispatch(handleLogin(data))\n        ability.update(data.ability)\n        history.push(getHomeRouteForLoggedInUser(admin.role.roleName))\n        toast.success(\n          <ToastContent name={data.fullName || data.username} role={data.role} />,\n          { transition: Slide, hideProgressBar: true, autoClose: 8000 }\n        )\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n\n  return (\n    <div className='auth-wrapper auth-v2'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n          <img src={logo} height='40' alt=\"\" />\n          <h1 className='brand-text text-primary ml-1'>Beliayam.com</h1>\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login V2' />\n          </div>\n        </Col>\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n            <CardTitle tag='h2' className='font-weight-bold mb-1'>\n              Selamat Datang di Dashboard! 👋\n            </CardTitle>\n            <CardText className='mb-2'>Silahkan Login dengan mengisi data dibawah</CardText>\n            <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\n              <FormGroup>\n                <Label className='form-label' for='login-email'>\n                  Email\n                </Label>\n                <Input\n                  autoFocus\n                  type='email'\n                  value={email}\n                  id='login-email'\n                  name='login-email'\n                  placeholder='john@example.com'\n                  onChange={e => setEmail(e.target.value)}\n                  className={classnames({ 'is-invalid': errors['login-email'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <div className='d-flex justify-content-between'>\n                  <Label className='form-label' for='login-password'>\n                    Password\n                  </Label>\n                  {/* <Link to='/forgot-password'>\n                    <small>Lupa Password?</small>\n                  </Link> */}\n                </div>\n                <InputPasswordToggle\n                  value={password}\n                  id='login-password'\n                  name='login-password'\n                  className='input-group-merge'\n                  onChange={e => setPassword(e.target.value)}\n                  className={classnames({ 'is-invalid': errors['login-password'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <CustomInput type='checkbox' className='custom-control-Primary' id='remember-me' label='Ingat saya' />\n              </FormGroup>\n              <Button.Ripple type='submit' color='primary' block>\n                Sign in\n              </Button.Ripple>\n            </Form>\n            {/* <p className='text-center mt-2'>\n              <span className='mr-25'>Belum punya akun?</span>\n              <Link to='/misc/not-authorized'>\n                <span>Buat baru</span>\n              </Link>\n            </p> */}\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Login\n","// auth url\nexport const REFRESH_TOKEN = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/auth/refresh-token`\nexport const LOGIN_URL = `http://localhost:4000/api/v1/admin/auth/login`\n\n// user url\nexport const GET_ALL_DATA_USER = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/users`\nexport const GET_USER_BYID = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/users/${id}`\nexport const GET_USER_BYACTIVE = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/users/${id}/active`\n\n// category url\nexport const GET_CATEGORY = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/category`\nexport const GET_CATEGORY_BYID = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/category/${id}`\nexport const GET_CATEGORY_SLUG = (slug) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/category/${slug}`\n\n// product url\nexport const GET_PRODUCT = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/product`\nexport const GET_PRODUCT_BYID = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/product/${id}`\nexport const GET_PRODUCT_SLUG = (slug) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/product/${slug}`\n\n// charge url\nexport const GET_CHARGE = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/charge`\nexport const GET_CHARGE_BYID = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/charge/${id}`\n\n// promo url\nexport const GET_PROMO = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/promo`\nexport const GET_PROMO_BYID = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/promo/${id}`\nexport const GET_PROMO_SLUG = (slug) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/promo/${slug}`\nexport const GET_PRODUCTS_BYPROMO = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/promo/${id}/product`\n\n// Voucher\nexport const GET_VOUCHER = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/voucher`\nexport const GET_VOUCHER_BYID = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/voucher/${id}`\nexport const GET_VOUCHER_SLUG = (slug) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/voucher/${slug}`\n\n// order url\nexport const GET_ORDER = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order`\nexport const GET_ORDER_BYID = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order/${id}`\nexport const POST_FORCE_COMPLETE_ORDER = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order/${id}/complete-order`\nexport const POST_CANCEL_ORDER = (id) => `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order/${id}/cancel-order`\nexport const GET_ORDER_BYSTATUS = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order/status`\nexport const SET_STATUS_DELIVERY = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order/delivery`\nexport const GET_ORDER_DELIVER = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order/delivery/fetch`\n\n// dashboard\nexport const GET_USER_FOR_DSB = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/users/time-range/client`\nexport const GET_ORDER_FOR_DSB = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/users/time-range/client`\n\n// charts\nexport const ORDER_BY_PAYMENT_METHOD = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/order/by-payment-method`\n\n// Statistic\nexport const TOTAL_REVENUE = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/sales/revenue`\nexport const TOTAL_ORDERS = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/sales/total`\nexport const TOTAL_PRODUCTS = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/product/total`\nexport const TOTAL_USERS = `${process.env.REACT_APP_BASE_URL_API}/api/v1/admin/users/total`\n","import axios from 'axios'\nimport { REFRESH_TOKEN } from './Url'\n\nconst axiosApiInstance = axios.create({\n    baseURL: `${process.env.REACT_APP_BASE_URL_API}`,\n    headers: {\n        Authorization: 'Bearer token'\n    }\n})\n\nconst getToken = (accessToken) => {\n    return localStorage.getItem(accessToken)\n}\n\nconst getRefreshToken = () => {\n    return localStorage.getItem(refreshToken)\n}\n\nconst fetchRefreshToken = () => {\n    return axios.post(REFRESH_TOKEN, {\n        refreshToken: getRefreshToken()\n    })\n}\n\n\nconst axiosInterceptor = () => {\n    axiosApiInstance.interceptors.request.use(async (config) => {\n        if (!config.headers.Authorization) {\n            const plainToken = getToken()\n            const token = plainToken\n            if (token) {\n                config.headers.Authorization = `Bearer ${getToken()}`\n            }\n        }\n        return config\n    })\n}\n\nconst axiosInterceptorResponse = async () => {\n    axios.interceptors.response.use(\n        (res) => {\n            return res\n        },\n        async (err) => {\n            const originalConfig = err.config\n            if (err.response) {\n                if (err.response.status === 401 && !originalConfig._retry) {\n                    originalConfig._retry = true\n                    try {\n                        const rs = await fetchRefreshToken()\n                        const {accessToken} = rs.data\n                        localStorage.setItem('accessToken', accessToken)\n                        axiosApiInstance.defaults.headers.Authorization = `Bearer ${accessToken}`\n                        return axiosApiInstance(originalConfig)\n                    } catch (error) {\n                        if (error.response && error.response.data) {\n                            return Promise.reject(error.response.data)\n                        }\n                        return Promise.reject(error)\n                    }\n                }\n                if (err.response.status === 403 && err.response.data) {\n                    return Promise.reject(err.response.data)\n                }\n            }\n            return Promise.reject(err)\n        }\n    )\n}\n\n\nexport const fetcher = async (url, config) => {\n    const header = {\n        ...config,\n        url,\n        headers: {\n            'Content-Type': 'application/json',\n            ...config?.headers\n        }\n    }\n\n    try {\n        axiosInterceptor()\n        const res = await axios.request(header)\n\n        if (res) {\n            axiosInterceptorResponse()\n            return res\n        }\n    } catch (err) {\n        throw err?.response\n    }\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\n\nconst InputPasswordToggle = props => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\n      <InputGroup\n        className={classnames({\n          [className]: className\n        })}\n      >\n        <Input\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName, componentName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName, componentName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}